{"version":3,"sources":["components/KinWeblogo.js","components/KinTreeView.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","button","margin","spacing","visible","display","hidden","heading","fontSize","typography","pxToRem","secondaryHeading","color","palette","text","secondary","icon","verticalAlign","height","details","alignItems","column","leftside","minWidth","helper","borderLeft","divider","padding","link","primary","main","textDecoration","clear","formControl","formGroupRow","ExpansionPanel","withStyles","border","boxShadow","borderBottom","expanded","MuiExpansionPanel","ExpansionPanelSummary","backgroundColor","marginBottom","minHeight","maxHeight","content","MuiExpansionPanelSummary","ExpansionPanelDetails","MuiExpansionPanelDetails","StyledFormGroup","FormGroup","React","memo","props","useState","numbers","selectedNumbering","setNumbering","selectedNumberingValue","setNumberingValue","setPropChanged","resudieChecked","setResudieChecked","mutationChecked","setMutationChecked","ptmChecked","setPtmChecked","DragHandle","sortableHandle","numberingclass","classNames","useEffect","classes","square","defaultExpanded","aria-controls","id","row","className","Button","variant","value","NativeSelect","onChange","event","target","val","filter","item","name","numbering","map","n","onClick","e","stopPropagation","inputProps","i","key","FormControlLabel","control","Switch","checked","prev","label","Box","src","path","index","flexGrow","maxWidth","position","nodes","setNodes","filterInput","useRef","TextField","autoFocus","ref","filtered","iter","o","temp","toLowerCase","includes","Array","isArray","length","current","focus","InputProps","startAdornment","InputAdornment","TreeView","defaultCollapseIcon","defaultExpandIcon","makeTree","node","style","Checkbox","onCheckBoxesChanged","handleNodeClick","TreeItem","nodeId","members","children","marginLeft","paper","leftBox","mainBoxVisible","mainBoxInvisible","treeVisible","marginRight","treeInvisible","nowrap","flexWrap","App","selectedNode","setSelectedNode","selectedNodes","setSelectedNodes","switchShowTreeChecked","setSwitchShowTreeChecked","switchDomainChecked","setSwitchDomainChecked","openResetDialog","setOpenResetDialog","setHeight","SortableItem","SortableElement","getCandidateNumbers","SortableList","SortableContainer","items","numberingjson","candidates","forEach","hasOwnProperty","push","handleCloseNo","Grid","labelPlacement","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","xs","container","justify","tree","console","log","nodeToDelete","arr","handleDelete","structure","Paper","elevation","onSortEnd","oldIndex","newIndex","arrayMove","useDragHandle","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ea60ce92.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames/bind';\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport MuiExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport MuiExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Divider from '@material-ui/core/Divider';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { withStyles } from '@material-ui/core/styles';\nimport {sortableHandle} from 'react-sortable-hoc';\nimport ReorderIcon from '@material-ui/icons/Reorder';\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    visible:\n    {\n      display: 'inline-block'\n    },\n    hidden: \n    { \n      display:\"none\"\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n    },\n    secondaryHeading: {\n      fontSize: theme.typography.pxToRem(15),\n      color: theme.palette.text.secondary,\n    },\n    icon: {\n      verticalAlign: 'bottom',\n      height: 20,\n      width: 20,\n    },\n    details: {\n      alignItems: 'baseline',\n      display:'block'\n    },\n    column: {\n      // flexBasis: '33.33%',\n    },\n    leftside:{\n      minWidth: 70\n    },\n    helper: {\n      borderLeft: `2px solid ${theme.palette.divider}`,\n      padding: theme.spacing(1, 2),\n    },\n    link: {\n      color: theme.palette.primary.main,\n      textDecoration: 'none',\n      '&:hover': {\n        textDecoration: 'underline',\n      },\n      margin: {\n        margin: theme.spacing(1),\n        clear:'none',\n\n      },\n      formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n      },\n      formGroupRow :\n      {\n        verticalAlign:'middle',\n      }\n        \n    },\n  }));\n\n\nconst ExpansionPanel = withStyles({\n  root: {\n    border: '1px solid rgba(0, 0, 0, .125)',\n    boxShadow: 'none',\n    '&:not(:last-child)': {\n      borderBottom: 0,\n    },\n    '&:before': {\n      display: 'none',\n    },\n    '&$expanded': {\n      margin: 'auto',\n    },\n  },\n  expanded: {},\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n  root: {\n    backgroundColor: 'rgba(0, 0, 0, .03)',\n    borderBottom: '1px solid rgba(0, 0, 0, .125)',\n    marginBottom: -1,\n    height: 44,\n    minHeight: 44,\n    maxHeight: 44,\n    '&$expanded': {\n      height: 44,\n      minHeight: 44,\n      maxHeight: 44,\n    },\n  },\n  content: {\n    '&$expanded': {\n      // margin: '12px 0',\n    },\n  },\n  expanded: {},\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiExpansionPanelDetails);\n\nconst StyledFormGroup = withStyles(theme => ({\n  root: {\n    display:'block',\n  },\n  \n}))(FormGroup);\n\nfunction showlabel(prefix,lbl)  \n{\n  if (lbl)\n    return prefix + ': ' + lbl;\n  return \"\";\n}\n// function renderOptions(numbers)\n// {\n//   if (!numbers)\n//     return \"N/A\";\n//   return numbers.map((item,i) => { return (<option key={i} value={item.name}>{item.name}</option>) });\n// }  \n  \nfunction KinWeblogo(props)\n{\n    const [selectedNumbering, setNumbering] = React.useState(props && props.numbers?props.numbers[0]:'');\n    const [selectedNumberingValue, setNumberingValue] = React.useState('');\n    const [propChanged, setPropChanged] = React.useState(false);\n    const [resudieChecked, setResudieChecked] = React.useState(true);\n    const [mutationChecked, setMutationChecked] = React.useState(false);\n    const [ptmChecked, setPtmChecked] = React.useState(false);\n    const DragHandle = sortableHandle(() => <ReorderIcon />);\n    const numberingclass = classNames({\n  \"numberingdiv\":true,\n  \"hidden\": !(resudieChecked || mutationChecked || ptmChecked)\n});\n\n    function toggleResidue() {\n      setResudieChecked(prev => !prev);\n    };\n    function toggleMutation() {\n      setMutationChecked(prev => !prev);\n    };\n    function togglePtm() {\n      setPtmChecked(prev => !prev);\n    };\n    //componentDidMount\n \n      useEffect( ()=>{\n        //alert(selectedNumbering);\n        //numberingChanged('init',props.numbers);\n        // setNumberingValue('AKT1');\n      }, [] );\n   \n\n    const numberingChanged = event => {\n      if (props.numbers && event.target)\n      {\n      const val = props.numbers.filter(function(item){return item.name == event.target.value});\n      let numbering = \"N/A\";\n      if (val)\n        numbering = val[0].value.map(n => n === null ? '- ' : <span className=\"v\">{n}</span>);\n      //showNumbers()\n      setNumbering({\"value\":numbering});\n      setPropChanged(true);\n      setNumberingValue(event.target.value);\n    }\n    };\n    \n    const classes = useStyles();\n\n    return(\n     //<div className={classes.root}>\n     <div>\n     <ExpansionPanel square defaultExpanded>\n       <ExpansionPanelSummary\n         //expandIcon={<ExpandMoreIcon />}\n         aria-controls=\"panel1d-content\" id=\"panel1d-header\">\n\n<StyledFormGroup row className={classes.formGroupRow}>\n<DragHandle />\n<Button variant=\"outlined\" color=\"secondary\" className={classes.button}>\n        {props.value.value}\n      </Button>\n      <NativeSelect\n                value={selectedNumberingValue}\n                onChange={numberingChanged}\n                onClick={e => { e.stopPropagation(); }}\n                inputProps={{\n                  name: 'numbering',\n                  id: 'numbering-native-label-placeholder',\n                }}\n              >\n                {/* {renderOptions(props.numbers)} */}\n                {props.numbers? props.numbers.map((item,i) => { return (<option key={i} value={item.name}>{item.name}</option>) }):\"\"}\n              \n\n              </NativeSelect>\n\n        <FormControlLabel\n          control={<Switch checked={resudieChecked}  value=\"residue\" onClick={e => { e.stopPropagation(); }} onChange={toggleResidue} />}\n          label=\"Residue\"\n        />\n        <FormControlLabel\n          control={<Switch checked={mutationChecked} value=\"mutation\" onClick={e => { e.stopPropagation(); }} onChange={toggleMutation}   />}\n          label=\"Mutation\"\n        />\n        <FormControlLabel\n          control={ <Switch checked={ptmChecked} value=\"ptm\" onClick={e => { e.stopPropagation(); }} onChange={togglePtm}   /> }          label=\"PTM\"\n        />\n      </StyledFormGroup>\n         \n       </ExpansionPanelSummary>\n       <ExpansionPanelDetails className={classes.details}>\n         {/* <div className={classes.leftside}>\n              <FormControl className={classes.formControl}>\n              <InputLabel shrink htmlFor=\"numbering-native-label-placeholder\">\n                Alignments\n              </InputLabel>\n          \n            </FormControl>\n         </div> */}\n         <Box>\n          <img id={`weblogo-${props.value.id}`} className={resudieChecked ? classes.visible: classes.hidden} src={`weblogos/${props.value.path}`} height={props.height?props.height:\"188\"} width={props.width ? props.width:\"4875\"}  />\n          \n         </Box>\n         <Box className={mutationChecked ? classes.visible: classes.hidden}>\n           <img id={`mutation-${props.value.id}`}  src={`mut_freq/${props.value.path}`} height={props.height?props.height:\"188\"} width={props.width ? props.width:\"4875\"}  />\n         </Box>\n         <Box className={ptmChecked ? classes.visible: classes.hidden}>\n           <img id={`ptm-${props.value.id}`}  src={`ptm/${props.value.path}`} height={props.height?props.height:\"188\"} width={props.width ? props.width:\"4875\"}  />\n         </Box>\n         <div className={numberingclass}>\n              {selectedNumbering?selectedNumbering.value.map((n,index) => n === null ? '- ' : <span key={`p${index}`} className=\"v\">{n}</span>):\"\"}\n              </div>\n     \n         \n      \n       </ExpansionPanelDetails>\n       {/* <Divider />\n       <ExpansionPanelActions>\n         <Button size=\"small\">Cancel</Button>\n         <Button size=\"small\" color=\"primary\">\n           Save\n         </Button>\n       </ExpansionPanelActions> */}\n     </ExpansionPanel>\n   </div>\n    \n    );\n}\nfunction memoize()\n{\n    return false;\n}\n//export default KinWeblogo;\nexport default React.memo(KinWeblogo,memoize);","import React,{useRef} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TreeView from '@material-ui/lab/TreeView';\nimport TreeItem from '@material-ui/lab/TreeItem';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Search from '@material-ui/icons/Search';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      // height: 216,\n      flexGrow: 1,\n      maxWidth: 200,\n      position: 'relative'\n    }\n  }));\n\nfunction KinTreeView(props) {\n    const classes = useStyles();\n    const [filter, setFilter] = React.useState('');\n    const [nodes, setNodes] = React.useState(props.nodes);\n    const filterInput = useRef(null);\n    function handleNodeClick(e,node)\n    {\n      props.onCheckBoxesChanged(node,e.target.checked);\n    }\n    function handleFilterChange(e)\n    {\n      let filtered;\n      if (e.target.value)\n      {\n        filtered= props.nodes.filter(function iter(o) {\n          var temp;\n          if (o.value.toLowerCase().includes(e.target.value.toLowerCase())) {\n              return true;\n          }\n          if (!Array.isArray(o.nodes)) {\n              return false;\n          }\n          temp = o.nodes.filter(iter);\n          if (temp.length) {\n              o.nodes = temp;\n              filtered = temp;\n              \n              return true;\n          }\n      });\n      setNodes(filtered);\n    }\n    else\n      setNodes(props.nodes);\n\n    filterInput.current.focus();\n    //  else\n    //    setNodes(props.nodes);\n\n    }\n    function makeTree(nodes) {\n      const children = (members) => {\n        if (members) {\n          return makeTree(members);\n        }\n      }\n\n      return nodes.map((node, index) => {\n        return <div key={`node-${index}`} style={{ display: 'flex', alignItems: 'baseline' }}>   \n          <Checkbox\n            id={`checkbox-${node.id}`}\n            color=\"primary\"\n            onChange={(e)=>handleNodeClick(e,node)}\n            //onClick={e => (e.stopPropagation())}\n          />\n      <TreeItem nodeId={ node.id } label={ node.value } >\n          { children(node.nodes) }\n        </TreeItem>\n        </div>\n      })\n    }\n\n    return (\n\n<div>\n<TextField autoFocus ref={filterInput} id=\"input-with-icon-grid\" label=\"Filter\" onChange={handleFilterChange} \n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <Search />\n            </InputAdornment>\n          ),\n        }}\n        />\n    \n   <TreeView\n      className={classes.root}\n      defaultCollapseIcon={<ExpandMoreIcon />}\n      defaultExpandIcon={<ChevronRightIcon />}\n    >\n      {\n        makeTree(nodes)\n          //   nodes.map(function(item, idx){\n          //   return (<TreeItem nodeId={item.id} label={item.value}/>)\n          // })}\n      }\n    </TreeView>\n    </div>\n    );\n}\nfunction memoize()\n{\n    //because we don't want to re-render the dendrogram\n    return true;\n}\n//const KinTreeView = React.memo(KinTreeViewFunc,memoize);\n//export default KinTreeView;\nexport default React.memo(KinTreeView,memoize);","//https://aspenmesh.io/2019/03/using-d3-in-react-a-pattern-for-using-data-visualization-at-scale/\nimport React, { useRef, useEffect, useState } from 'react';\nimport './App.css';\n//import MuiTreeView from 'material-ui-treeview';\nimport tree from './data/classification.json';\nimport numberingjson from './data/numbering.json';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { makeStyles } from '@material-ui/core/styles';\n//import * as d3 from \"d3\";\nimport KinWeblogo from './components/KinWeblogo'\nimport KinTreeView from './components/KinTreeView'\nimport Switch from '@material-ui/core/Switch';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\n// const rowWidth = 30, rowHeight = 120;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    // flexGrow: 1,\n    marginLeft: 30,\n  },\n  paper: {\n    padding: theme.spacing(0),\n  },\n  leftBox:\n  {\n    position: 'relative',\n    // zIndex:'top'\n  },\n  mainBoxVisible:\n  {\n    //marginLeft: 200,\n    display: 'inline-block'\n  },\n  mainBoxInvisible:\n  {\n    // marginLeft: 215,\n    display: 'none'\n  },\n  treeVisible:\n  {\n    display: 'inline-block',\n    marginRight: 40\n  },\n  treeInvisible:\n  {\n    //marginLeft: 0,\n    display: 'none'\n  },\n  nowrap:\n  {\n    flexWrap: \"nowrap !important\",\n  },\n\n  paper: {\n    // backgroundColor: theme.palette.background.paper,\n    // border: '0px solid #000',\n    // boxShadow: \"none\",//theme.shadows[5],\n    // padding: theme.spacing(3, 10, 1),\n    // minWidth: 400,\n    // overflow: 'auto'\n  },\n  hidden:\n  {\n    display: \"none\"\n  },\n  structure:\n  {\n    marginLeft: 108,\n    width: 4863\n  }\n}));\n// console.log(tree);\n// const imgLogoStyle = {\n//   width: '100px'\n// };\nconst imgUgaLogoStyle = {\n  float: 'right',\n  width: '120px',\n  marginTop: '-40px'\n};\n\n// const treeStyles = {\n//   control: styles => ({ ...styles, color: 'red' }),\n//   text: (styles, { text, childPanel }) => {\n//     //const color = chroma(data.color);\n//     return {\n//       ...styles,\n//       backgroundColor: 'blue',\n//       color: 'green',\n//     };\n//   },\n// };\n\n\nfunction App() {\n  const [rdbvalue, setRdbValue] = React.useState('rdbResidue');\n  // const [firstLabel, setFirstLabel] = React.useState('');\n  // const [secondLabel, setSecondLabel] = React.useState('');\n\n  const [selectedNode, setSelectedNode] = React.useState('');\n  const [selectedNodes, setSelectedNodes] = React.useState([]);\n  const [switchShowTreeChecked, setSwitchShowTreeChecked] = React.useState(true);\n  const [switchDomainChecked, setSwitchDomainChecked] = React.useState(false);\n  const [openResetDialog, setOpenResetDialog] = React.useState(false);\n\n\n\n  const [open, setOpen] = React.useState(false);\n  const [items, setItems] = useState([]);\n  const [height, setHeight] = React.useState(\"100\");\n\n  const SortableItem = SortableElement((item) =>\n    <div>\n\n      <KinWeblogo value={item.value} numbers={getCandidateNumbers(item.value)} height={height} />\n    </div>\n  );\n  const SortableList = SortableContainer(({ items }) => {\n    return (\n      <ul>\n        {selectedNodes.map((item, index) => (\n          <SortableItem key={`item-${item.id}`} index={index} value={item} />\n          //     <KinWeblogo src={'weblogos/' + item.path} label={item.value} numbers={getCandidateNumbers(item)}/>\n\n        ))}\n      </ul>\n    );\n  });\n  const onSortEnd = ({ oldIndex, newIndex }) => {\n    setSelectedNodes(arrayMove(selectedNodes, oldIndex, newIndex));\n  };\n\n\n\n\n  function handleChange(node, checked) {\n    console.log(\"id=\" + node.id);\n    console.log(\"checked=\" + checked);\n    console.log(\"handleChange:\" + selectedNodes.length);\n\n\n    if (checked) { //add the selection to selectedNodes\n      setSelectedNode(node);\n      setSelectedNodes(selectedNodes => [...selectedNodes, node]);\n    }\n    else //remvoe the Selection\n    {\n      //setSelectedNode('');\n      handleDelete(node);\n    }\n\n  }\n  // function nodeSelected(node)\n  // {\n\n  //   // if (rdbvalue === 'rdbfirst')\n  //   //   setFirstLabel(node.value);\n  //   // else if (rdbvalue === 'rdbsecond')\n  //   //   setSecondLabel(node.value);\n\n  // }\n  function getCandidateNumbers(node) {\n    let numbering = { numberingjson }\n    //todo: members[0] should be a dropdown box\n    if (!node || !node.members || node.members.length == 0 || !(node.members[0] in numbering.numberingjson))\n      return null;\n\n    let candidates = []\n    node.members.forEach(function (n) {\n      if (numbering.numberingjson.hasOwnProperty(n))\n        candidates.push({ \"name\": n, \"value\": numbering.numberingjson[n] });\n    });\n\n    return candidates;\n    //return numbering.numberingjson[node.members[0]];\n  }\n\n  function handleDelete(nodeToDelete) {\n    var filtered = selectedNodes.filter(function (value, index, arr) {\n      return value.id != nodeToDelete.id;\n    });\n    setSelectedNodes(filtered);\n  }\n  const handleTreeSwitchChange = () => {\n    setSwitchShowTreeChecked(prev => !prev);\n  };\n  const handleDomainSwitchChange = () => {\n    setSwitchDomainChecked(prev => !prev);\n  };\n  const handleResetClick = () => {\n    setOpenResetDialog(true);\n  }\n\n\n\n  //   function renderWeblogos()\n  // {\n  //   if (selectedNodes.length == 0)\n  //     return \"N/A\";\n  //   return selectedNodes.map((item,i) => { return (\n  //     <KinWeblogo src={'weblogos/' + item.path} label={item.value} numbers={getCandidateNumbers(item)}/>\n  //   ) });\n  // }\n  // function getImage(lbl)\n  // {\n  //   console.log(lbl)\n  //   let src = '';\n  //   if (lbl !== '')\n  //     src = 'weblogos/PK_' + lbl + '.png';\n\n  //   return src;\n  // }\n\n  // function drawd()\n  // {\n  //   var img = document.getElementById(\"firstImage\");\n  //   if (img!==null && img.src!=='')\n  //   {  \n\n  //     var cnvs = document.getElementById(\"firstCanvas\");\n  //    console.log(cnvs);\n  //     cnvs.style.position = \"absolute\";\n  //     cnvs.style.left = img.offsetLeft + \"px\";\n  //     cnvs.style.top = img.offsetTop + \"px\";\n\n  //     var ctx = cnvs.getContext(\"2d\");\n  //     ctx.beginPath();\n  //     ctx.arc(250, 210, 200, 0, 2 * Math.PI, false);\n  //     ctx.lineWidth = 3;\n  //     ctx.strokeStyle = '#00ff00';\n  //     ctx.stroke();\n  //   }\n  // }\n\n  const handleCloseYes = () => {\n    setOpenResetDialog(false);\n    setSelectedNodes([]);\n  };\n\n  const handleCloseNo = () => {\n    setOpenResetDialog(false);\n  };\n  const heightChanged = event => {\n    setHeight(event.target.value);\n  };\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Grid item>\n        <FormControlLabel label=\"Hierarchy\" control={<Switch checked={switchShowTreeChecked} onChange={handleTreeSwitchChange} />} />\n        <FormControlLabel label=\"Domain Structure\" control={<Switch checked={switchDomainChecked} onChange={handleDomainSwitchChange} />} />\n        <FormControlLabel control={<Button variant=\"outlined\" color=\"secondary\" onClick={handleResetClick}>Reset</Button>} />\n        <FormControlLabel label=\"Height\" labelPlacement=\"start\" control={<TextField value={height} onChange={heightChanged} style={{ width: 50 }} />} />\n\n        <Dialog\n          open={openResetDialog}\n          onClose={handleCloseNo}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Confirmation\"}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              Do you want to remove all of the selections?\n          </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleCloseYes} color=\"primary\">\n              Yes\n          </Button>\n            <Button onClick={handleCloseNo} color=\"primary\" autoFocus>\n              No\n          </Button>\n          </DialogActions>\n        </Dialog>\n\n\n        {/* <SelectionBox items={selectedNodes} onDelete={handleDelete} /> */}\n      </Grid>\n\n\n      <Grid item xs={12}>\n        <Grid container justify=\"flex-start\" spacing={1} className={classes.nowrap}>\n          <Grid key=\"leftTree\" className={switchShowTreeChecked ? classes.treeVisible : classes.treeInvisible} item>\n            <KinTreeView nodes={tree} onCheckBoxesChanged={handleChange} />\n          </Grid>\n          <Grid key=\"rightContents\" item>\n            <div className={selectedNodes.length > 0 ? classes.mainBoxVisible : classes.mainBoxInvisible}>\n\n              <img src={'img/KinView_Structure.png'} className={selectedNode && switchDomainChecked ? classes.structure : classes.hidden} />\n              <Paper className={selectedNode ? classes.paper : classes.hidden} elevation={0}>\n                {\n                  <SortableList items={selectedNodes} onSortEnd={onSortEnd} useDragHandle />\n                  // selectedNodes.map(function (item, idx) {\n                  //   return //(<KinWeblogo src={'weblogos/' + item.path} height=\"140\"  label={item.value} numbers={getCandidateNumbers(item)} />)\n                  // })\n                }\n\n              </Paper>\n            </div>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}