{"version":3,"sources":["../node_modules/typescript/lib sync","components/DropDownButton.js","components/ExpandLessOrMore.js","components/KinWeblogo.js","components/KinTreeView.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","DropDownButton","props","variant","popupId","popupState","Fragment","Button","bindTrigger","color","size","startIcon","value","Menu","bindMenu","items","map","item","index","MenuItem","onClick","path","setTimeout","response","file","window","open","close","clicked","key","text","ExpandLessOrMore","isExpanded","useStyles","makeStyles","theme","root","width","button","margin","spacing","textTransform","visible","display","hidden","heading","fontSize","typography","pxToRem","secondaryHeading","palette","secondary","icon","verticalAlign","height","details","alignItems","column","leftside","minWidth","helper","borderLeft","divider","padding","link","primary","main","textDecoration","clear","formControl","formGroupRow","ExpansionPanel","withStyles","border","boxShadow","borderBottom","expanded","MuiExpansionPanel","ExpansionPanelSummary","backgroundColor","marginBottom","minHeight","maxHeight","content","MuiExpansionPanelSummary","ExpansionPanelDetails","MuiExpansionPanelDetails","StyledFormGroup","position","left","placeItems","justifyContent","FormGroup","highlightColumn","KinWeblogo","React","useState","numbers","selectedNumbering","setNumbering","selectedNumberingValue","setNumberingValue","setPropChanged","setIsExpanded","residueChecked","setResidueChecked","mutationWeblogosChecked","setMutationWeblogosChecked","mutationBarchartChecked","setMutationBarchartChecked","ptmBarchartChecked","setPtmBarchartChecked","DragHandle","sortableHandle","numberingclass","classNames","useEffect","baseUrl","location","origin","toString","classes","square","className","viewMode","aria-controls","row","event","onRemove","style","cursor","FormControlLabel","control","Switch","checked","stopPropagation","onChange","prev","label","class","lable","Typography","NativeSelect","target","val","filter","name","numbering","n","inputProps","i","getAlignedSequences","aligend_seq","getOrthologSequences","ortholog_seq","Box","src","useTreeItemStyles","grey","borderTopRightRadius","borderBottomRightRadius","paddingRight","fontWeight","fontWeightMedium","fontWeightRegular","group","marginLeft","labelRoot","labelIcon","marginRight","labelText","flexGrow","maxWidth","StyledTreeItem","isDark","nodeType","labelInfo","labelIconColor","bgColor","other","TreeItem","alt","KinTreeView","originalNodes","tree","concat","nodesCopy","JSON","parse","stringify","nodes","setNodes","darkKinase","switchOnlyDark","setSwitchOnlyDark","handleNodeClick","node","onCheckBoxesChanged","checkInSelectedNodes","selectedNodes","length","useRef","x","Autocomplete","options","undefined","getOptionLabel","option","onInputChange","filtered","console","log","iter","o","toLowerCase","includes","Array","isArray","temp","freeSolo","renderInput","params","TextField","TreeView","defaultCollapseIcon","ArrowDropDown","defaultExpandIcon","ArrowRight","makeTree","Checkbox","nodeId","type","members","children","paper","leftBox","mainBoxVisible","mainBoxInvisible","treeVisible","treeInvisible","nowrap","flexWrap","App","selectedNode","setSelectedNode","setSelectedNodes","switchShowTreeChecked","setSwitchShowTreeChecked","switchDomainChecked","setSwitchDomainChecked","switchMotifChecked","setSwitchMotifChecked","switchHighResChecked","openResetDialog","setOpenResetDialog","setViewMode","setHeight","weblogoCheckboxChanged","modifiedNodes","j","SortableItem","SortableElement","highres","getCandidateNumbers","handleDelete","SortableList","SortableContainer","numberingjson","candidates","forEach","hasOwnProperty","push","nodeToDelete","arr","handleCloseNo","Grid","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","xs","container","justify","alreadyAdded","some","ptmChecked","mutationBarchart","Paper","elevation","p","m","labelPlacement","Slider","defaultValue","valueLabelDisplay","step","min","max","float","component","legendLabel","motif","structure","onSortEnd","oldIndex","newIndex","arrayMove","useDragHandle","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qUAAA,SAASA,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBS,GAAK,K,mYCDV,SAASC,EAAeC,GAcrC,OACE,kBAAC,IAAD,CAAYC,QAAQ,UAAUC,QAAQ,oBACnC,SAACC,GAAD,OACC,kBAAC,IAAMC,SAAP,KACA,kBAACC,EAAA,EAAD,iBAAYC,sBAAYH,GAAxB,CAAqCF,QAAQ,WAAWM,MAAM,UAAUC,KAAK,QAAQC,UAAW,kBAAC,IAAD,QAC3FT,EAAMU,OAEX,kBAACC,EAAA,EAASC,mBAAST,GAEfH,EAAMa,MAAMC,KAAI,SAACC,EAAMC,GAAP,OACd,kBAACC,EAAA,EAAD,CAAUC,QAAS,SAAC3B,GAAD,OAvB7B,SAAiBwB,EAAKZ,EAAWZ,GAE7B,IAAI4B,EAAQJ,EAAKL,MACjBU,YAAW,WACT,IAAMC,EAAW,CACfC,KAAMH,GAGRI,OAAOC,KAAKH,EAASC,QACpB,KACHnB,EAAWsB,QAaqBC,CAAQX,EAAMZ,IAAgBwB,IAAKX,EAAON,MAAOK,EAAKL,OAAQK,EAAKa,c,sCCrB5FC,MANf,SAA0B7B,GACtB,OAAIA,EAAM8B,WACE,kBAAC,IAAD,CAAgBZ,QAASlB,EAAMkB,UAE/B,kBAAC,IAAD,CAAgBA,QAASlB,EAAMkB,WCuBzCa,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,MAAO,QAETC,OAAQ,CACNC,OAAQJ,EAAMK,QAAQ,GACtBC,cAAe,QAEjBC,QACA,CACEC,QAAS,gBAEXC,OACA,CACED,QAAS,QAEXE,QAAS,CACPC,SAAUX,EAAMY,WAAWC,QAAQ,KAErCC,iBAAkB,CAChBH,SAAUX,EAAMY,WAAWC,QAAQ,IACnCvC,MAAO0B,EAAMe,QAAQpB,KAAKqB,WAE5BC,KAAM,CACJC,cAAe,SACfC,OAAQ,GACRjB,MAAO,IAETkB,QAAS,CACPC,WAAY,WACZb,QAAS,SAEXc,OAAQ,GAGRC,SAAU,CACRC,SAAU,IAEZC,OAAQ,CACNC,WAAW,aAAD,OAAe1B,EAAMe,QAAQY,SACvCC,QAAS5B,EAAMK,QAAQ,EAAG,IAE5BwB,KAAM,CACJvD,MAAO0B,EAAMe,QAAQe,QAAQC,KAC7BC,eAAgB,OAChB,UAAW,CACTA,eAAgB,aAElB5B,OAAQ,CACNA,OAAQJ,EAAMK,QAAQ,GACtB4B,MAAO,QAGTC,YAAa,CACX9B,OAAQJ,EAAMK,QAAQ,GACtBmB,SAAU,KAEZW,aACA,CACEjB,cAAe,eAOfkB,EAAiBC,YAAW,CAChCpC,KAAM,CACJqC,OAAQ,gCACRC,UAAW,OACX,qBAAsB,CACpBC,aAAc,GAEhB,WAAY,CACVhC,QAAS,QAEX,aAAc,CACZJ,OAAQ,SAGZqC,SAAU,IAdWJ,CAepBK,KAEGC,EAAwBN,YAAW,CACvCpC,KAAM,CACJ2C,gBAAiB,qBACjBJ,aAAc,gCACdK,cAAe,EACf1B,OAAQ,GACR2B,UAAW,GACXC,UAAW,GACX,aAAc,CACZ5B,OAAQ,GACR2B,UAAW,GACXC,UAAW,KAGfC,QAAS,CACP,aAAc,IAIhBP,SAAU,IAnBkBJ,CAoB3BY,KAEGC,EAAwBb,aAAW,SAAArC,GAAK,MAAK,CACjDC,KAAM,CACJ2B,QAAS5B,EAAMK,QAAQ,OAFGgC,CAI1Bc,KAEEC,EAAkBf,aAAW,SAAArC,GAAK,MAAK,CAC3CC,KAAM,CACJoD,SAAU,SACVC,KAAM,EACN9C,QAAS,OACT+C,WAAY,SACZrD,MAAO,SACPsD,eAAgB,oBAPInB,CAUpBoB,KAaJ,SAASC,EAAgBpG,IAgNVqG,MA9Lf,SAAoB5F,GAAQ,IAAD,EACiB6F,IAAMC,SAAS9F,GAASA,EAAM+F,QAAU/F,EAAM+F,QAAQ,GAAK,IAD5E,mBAClBC,EADkB,KACCC,EADD,OAE2BJ,IAAMC,SAAS,IAF1C,mBAElBI,EAFkB,KAEMC,EAFN,OAGaN,IAAMC,UAAS,GAH5B,mBAGLM,GAHK,aAIWP,IAAMC,UAAS,GAJ1B,mBAIlBhE,EAJkB,KAINuE,EAJM,OAKmBR,IAAMC,SAAS9F,EAAMsG,gBALxC,mBAKlBA,EALkB,KAKFC,EALE,OAMqCV,IAAMC,SAAS9F,EAAMwG,yBAN1D,mBAMlBA,EANkB,KAMOC,EANP,OAOqCZ,IAAMC,SAAS9F,EAAM0G,yBAP1D,mBAOlBA,EAPkB,KAOOC,EAPP,OAS2Bd,IAAMC,SAAS9F,EAAM4G,oBAThD,mBASlBA,EATkB,KASEC,EATF,KAUnBC,EAAaC,aAAe,kBAAM,kBAAC,IAAD,SAClCC,GAAiBC,IAAW,CAChC,cAAgB,EAChB,SAAYX,GAAkBE,GAA2BE,GAA2BE,KA4BtFM,qBAAU,cAIP,IAEH,IAAMC,GAAO,UAAM5F,OAAO6F,SAASC,OAAOC,WAA7B,KAkCPC,GAAUxF,IAEhB,OAEE,6BACE,kBAAC,EAAD,CAAgByF,QAAM,EAAC9C,SAAU5C,GAC/B,kBAAC,EAAD,CAAuB2F,UAAWzH,EAAM0H,SAAUH,GAAQ7E,OAAO,GAE/DiF,gBAAc,kBAAkB7H,GAAG,kBAEnC,kBAACuF,EAAD,CAAiBuC,KAAG,EAACH,UAAWF,GAAQnD,cACtC,kBAAC,EAAD,CAAkBtC,WAAYA,EAAYZ,QAtDpD,SAAwB2G,GACtBxB,GAAevE,MAsDP,kBAACgF,EAAD,MACA,kBAAC,IAAD,CAAYlE,SAAS,QAAQ1B,QAASlB,EAAM8H,SAAUC,MAAO,CAAEC,OAAQ,aACvE,kBAAC3H,EAAA,EAAD,CAAQG,KAAK,QAAQP,QAAQ,WAAWM,MAAM,UAAUkH,UAAWF,GAAQnF,QACxEpC,EAAMU,MAAMA,OAEf,kBAACuH,EAAA,EAAD,CACEC,QAAS,kBAACC,EAAA,EAAD,CAAQ3H,KAAK,QAAQV,GAAE,uBAAkBE,EAAMU,MAAMZ,IAAMsI,QAAS9B,EAAgB5F,MAAM,UAAUQ,QAAS,SAAA3B,GAAOA,EAAE8I,mBAAsBC,SAnFjK,SAAuBT,GACrBtB,GAAkB,SAAAgC,GAAI,OAAKA,KAC3BvI,EAAMsI,SAAST,MAkFLW,MAAM,YAER,kBAACP,EAAA,EAAD,CAAkBC,QAAS,kBAACC,EAAA,EAAD,CAAQ3H,KAAK,QAAQV,GAAE,wBAAmBE,EAAMU,MAAMZ,IAAMsI,QAASxB,EAAoBlG,MAAM,OAAOQ,QAAS,SAAA3B,GAAOA,EAAE8I,mBAAsBC,SAtEnL,SAA2BT,GACzBhB,GAAsB,SAAA0B,GAAI,OAAKA,KAC/BvI,EAAMsI,SAAST,MAqEHW,MAAM,QACV,yBAAKC,MAAM,WACT,kCACE,+CACA,kBAACR,EAAA,EAAD,CACEC,QAAS,kBAACC,EAAA,EAAD,CAAQ3H,KAAK,QAAQV,GAAE,wBAAmBE,EAAMU,MAAMZ,IAAMsI,QAAS5B,EAAyB9F,MAAM,YAAYQ,QAAS,SAAA3B,GAAOA,EAAE8I,mBAAsBC,SApFjL,SAAgCT,GAC9BpB,GAA2B,SAAA8B,GAAI,OAAKA,KACpCvI,EAAMsI,SAAST,MAmFDW,MAAM,YACR,kBAACP,EAAA,EAAD,CAAkBC,QAAS,kBAACC,EAAA,EAAD,CAAQO,MAAM,WAAWlI,KAAK,QAAQV,GAAE,wBAAmBE,EAAMU,MAAMZ,IAAMsI,QAAS1B,EAAyBhG,MAAM,YAAYQ,QAAS,SAAA3B,GAAOA,EAAE8I,mBAAsBC,SA1FlN,SAAgCT,GAC9BlB,GAA2B,SAAA4B,GAAI,OAAKA,KACpCvI,EAAMsI,SAAST,MAyFDW,MAAM,eAKZ,kBAACG,EAAA,EAAD,2BACA,kBAACC,EAAA,EAAD,CACElI,MAAOwF,EACPoC,SAtEa,SAAAT,GACvB,GAAI7H,EAAM+F,SAAW8B,EAAMgB,OAAQ,CACjC,IAAMC,EAAM9I,EAAM+F,QAAQgD,QAAO,SAAUhI,GAAQ,OAAOA,EAAKiI,MAAQnB,EAAMgB,OAAOnI,SAChFuI,EAAY,MACZH,IACFG,EAAYH,EAAI,GAAGpI,MAAMI,KAAI,SAAAoI,GAAC,OAAU,OAANA,EAAa,KAAO,0BAAMzB,UAAU,KAAKyB,OAE7EjD,EAAa,CAAE,MAASgD,IACxB7C,GAAe,GACfD,EAAkB0B,EAAMgB,OAAOnI,SA8DvBQ,QAAS,SAAA3B,GAAOA,EAAE8I,mBAClBc,WAAY,CACVH,KAAM,YACNlJ,GAAI,uCAILE,EAAM+F,QAAU/F,EAAM+F,QAAQjF,KAAI,SAACC,EAAMqI,GAAQ,OAAQ,4BAAQzH,IAAKyH,EAAG1I,MAAOK,EAAKiI,MAAOjI,EAAKiI,SAAqB,IAGzH,kBAACL,EAAA,EAAD,0BAEE,kBAAC5I,EAAD,CAAgBc,MAtE5B,WAEE,IAAMiI,EAAK9I,EAAMU,MAAMA,MACvB,MAAO,CAAC,CAACkB,KAAK,YAAalB,MAAOyG,GAAU,eAAiB2B,EAAM,QAC3D,CAAClH,KAAK,kBAAmBlB,MAAMyG,GAAU,gBAAkB2B,EAAM,UACjE,CAAClH,KAAK,gBAAiBlB,MAAMyG,GAAU,cAAgB2B,EAAM,UAC7D,CAAClH,KAAK,WAAYlB,MAAMyG,GAAU,eAAiB2B,EAAM,QACzD,CAAClH,KAAK,MAAOlB,MAAMyG,GAAU,eAAiB2B,EAAM,SA+D3BO,GAAuB3I,MAAOV,EAAMU,MAAM4I,cAEjE,kBAACX,EAAA,EAAD,2BACA,kBAAC5I,EAAD,CAAgBc,MA9D5B,WAEE,IAAMiI,EAAK9I,EAAMU,MAAMA,MACvB,MAAO,CAAC,CAACkB,KAAK,YAAalB,MAAMyG,GAAU,iBAAmB2B,EAAM,UAC5D,CAAClH,KAAK,kBAAmBlB,MAAMyG,GAAU,eAAiB2B,EAAM,WA0DvCS,GAAwB7I,MAAOV,EAAMU,MAAM8I,iBAKxE,kBAAC,EAAD,CAAuB/B,UAAWF,GAAQlE,SASxC,kBAACoG,EAAA,EAAD,KAEE,yBAAK3J,GAAE,kBAAaE,EAAMU,MAAMZ,IAAM2H,UAAWnB,EAAiBiB,GAAQ/E,QAAU+E,GAAQ7E,OAAQgH,IAAG,wBAAmB1J,EAAMU,MAAMS,KAA/B,QAA2CiC,OAAQpD,EAAMoD,OAASpD,EAAMoD,OAAS,MAAOjB,MAAOnC,EAAMmC,MAAQnC,EAAMmC,MAAQ,UAEpO,kBAACsH,EAAA,EAAD,CAAKhC,UAAWjB,EAA0Be,GAAQ/E,QAAU+E,GAAQ7E,QAClE,yBAAK5C,GAAE,oBAAeE,EAAMU,MAAMZ,IAAM4J,IAAG,iCAA4B1J,EAAMU,MAAMS,KAAxC,QAAoDiC,OAAQpD,EAAMoD,OAASpD,EAAMoD,OAAS,MAAOjB,MAAOnC,EAAMmC,MAAQnC,EAAMmC,MAAQ,UAEjL,kBAACsH,EAAA,EAAD,CAAKhC,UAAWb,EAAqBW,GAAQ/E,QAAU+E,GAAQ7E,QAC7D,yBAAK5C,GAAE,cAASE,EAAMU,MAAMZ,IAAM4J,IAAG,2BAAsB1J,EAAMU,MAAMS,KAAlC,QAA8CiC,OAAQpD,EAAMoD,OAASpD,EAAMoD,OAAS,MAAOjB,MAAOnC,EAAMmC,MAAQnC,EAAMmC,MAAQ,UAErK,kBAACsH,EAAA,EAAD,CAAKhC,UAAWf,EAA0Ba,GAAQ/E,QAAU+E,GAAQ7E,QAClE,yBAAK5C,GAAE,oBAAeE,EAAMU,MAAMZ,IAAM4J,IAAG,iCAA4B1J,EAAMU,MAAMS,KAAxC,QAAoDiC,OAAQpD,EAAMoD,OAASpD,EAAMoD,OAAS,MAAOjB,MAAOnC,EAAMmC,MAAQnC,EAAMmC,MAAQ,UAQjL,yBAAKsF,UAAWT,IACbhB,EAAoBA,EAAkBtF,MAAMI,KAAI,SAACoI,EAAGlI,GAAJ,OAAoB,OAANkI,EAAa,0BAAMvH,IAAG,WAAMX,GAASyG,UAAU,KAAlC,KAAiD,0BAAM9F,IAAG,WAAMX,GAASE,QAASyE,EAAiB8B,UAAU,KAAKyB,MAAa,Q,sFC9UjNS,I,OAAoB3H,aAAW,SAAAC,GAAK,MAAK,CAC7CC,KAAM,CACJ3B,MAAO0B,EAAMe,QAAQpB,KAAKmC,QAC1B,qBAAsB,CACpBc,gBAAgB,6BAAD,OAA+B5C,EAAMe,QAAQ4G,KAAK,KAAlD,KACfrJ,MAAO,2BAGX0E,QAAS,CACP1E,MAAO0B,EAAMe,QAAQpB,KAAKmC,QAC1B8F,qBAAsB5H,EAAMK,QAAQ,GACpCwH,wBAAyB7H,EAAMK,QAAQ,GACvCyH,aAAc9H,EAAMK,QAAQ,GAC5B0H,WAAY/H,EAAMY,WAAWoH,iBAC7B,gBAAiB,CACfD,WAAY/H,EAAMY,WAAWqH,oBAGjCC,MAAO,CACLC,WAAY,EACZ,aAAc,IAIhB1F,SAAU,GACV8D,MAAO,CACLwB,WAAY,UACZzJ,MAAO,WAET8J,UAAW,CACT5H,QAAS,OACTa,WAAY,SACZO,QAAS5B,EAAMK,QAAQ,GAAK,GAC5BD,QAAS,GAEXiI,UAAW,CACTC,YAAatI,EAAMK,QAAQ,IAE7BkI,UAAW,CACTR,WAAY,UACZS,SAAU,QAKR1I,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CAEJuI,SAAU,EACVC,SAAU,IACVpF,SAAU,WACV8E,YAAa,QAKjB,SAASO,GAAe3K,GACtB,IAAMuH,EAAUoC,KACRiB,EAA2G5K,EAA3G4K,OAAQC,EAAmG7K,EAAnG6K,SAAUL,EAAyFxK,EAAzFwK,UAAiDM,GAAwC9K,EAA9EsK,UAA8EtK,EAAxD+K,eAAwD/K,EAAxC8K,WAAWvK,EAA6BP,EAA7BO,MAAOyK,EAAsBhL,EAAtBgL,QAAYC,EAF5E,YAEsFjL,EAFtF,8FAI7B,OACE,kBAACkL,GAAA,EAAD,eACE1C,MACE,yBAAKf,UAAWF,EAAQ8C,WAER,WAAZQ,GAAyBD,EACzB,yBAAKO,IAAI,qBAAqBzB,IAAI,sBAAsBvH,MAAM,SAC7D,GAGW,WAAZ0I,GAA0BD,EAGzB,GADD,yBAAKO,IAAI,oBAAoBzB,IAAI,2BAA2BvH,MAAM,SAGpE,kBAACwG,EAAA,EAAD,CAAY1I,QAAQ,QAAQwH,UAAWF,EAAQiD,WAC5CA,GAEH,kBAAC7B,EAAA,EAAD,CAAY1I,QAAQ,UAAUM,MAAM,WACjCuK,IAIP/C,MAAO,CACL,oBAAqBxH,EACrB,uBAAwByK,GAE1BzD,QAAS,CACPrF,KAAMqF,EAAQrF,KACd+C,QAASsC,EAAQtC,QACjBP,SAAU6C,EAAQ7C,SAClByF,MAAO5C,EAAQ4C,MACf3B,MAAOjB,EAAQiB,QAEbyC,IAqJKG,OAhIf,SAAqBpL,GACnB,IACMqL,EADWC,GAAK,GAAGC,OAAOD,GAAK,IACNxK,KAAI,SAACoI,GAAqB,OAAhBA,EAAEd,SAAQ,EAAac,KAC1DsC,EAAYC,KAAKC,MAAMD,KAAKE,UAAUN,IAEtC9D,EAAUxF,KALU,EAQD8D,IAAMC,SAASuF,GARd,mBAQnBO,EARmB,KAQbC,EARa,OASLhG,IAAMC,SAAS9F,EAAM8L,YAAnCA,EATmB,sBAUkBjG,IAAMC,UAAS,GAVjC,mBAUnBiG,EAVmB,KAUHC,EAVG,KAoB1B,SAASC,EAAgBC,EAAK9D,GAC5BpI,EAAMmM,oBAAoBD,EAAM9D,GAKlC,SAASgE,EAAqBF,GAC5B,OAAOlM,EAAMqM,cAActD,QAAO,SAAAG,GAAC,OAAIA,EAAEpJ,IAAMoM,EAAKpM,MAAIwM,OAAS,EAmDnE,OAlEoBC,iBAAO,MAE3BrF,qBAAU,WACR,IAAIgF,EAAOb,EAActC,QAAO,SAAAyD,GAAC,MAAQ,SAANA,EAAE1M,MAAa,GAClDoM,EAAK9D,SAAQ,EACb6D,EAAgBC,GAAK,KACrB,CAACN,IA8DD,6BACI,kBAAC3D,EAAA,EAAD,CAAkBF,MAAO,CAAC5F,MAAM,eAAgBqG,MAAM,mBAAmBN,QAAS,kBAACC,EAAA,EAAD,CAAQC,QAAS2D,EAAgBzD,SA1DlG,WACrB0D,GAAkB,SAAAzD,GAAI,OAAKA,UA0DrB,kBAACkE,GAAA,EAAD,eACCjM,KAAK,QAENV,GAAG,uBACH4M,QAASX,EAAeD,OAAWa,EACnCC,eAAgB,SAAAC,GAAM,OAAIA,EAAOnM,OACjCoM,cA1DR,SAA4BvN,EAAEuJ,GAE5B,IAAIiE,EADJC,QAAQC,IAAI,OAAQnE,GAEhBA,GACFiE,EAAWvB,EAAUzC,QAAO,SAASmE,EAAKC,GACxC,GAAIA,EAAEzM,MAAM0M,cAAcC,SAASvE,EAAIsE,eACrC,OAAO,EAET,IAAKE,MAAMC,QAAQJ,EAAEvB,OACnB,OAAO,EAET,IAAI4B,EAAOL,EAAEvB,MAAM7C,OAAOmE,GAC1B,OAAIM,EAAKlB,QACPa,EAAEvB,MAAQ4B,EACVT,EAAWS,GAEJ,QAJT,KAOF3B,EAAS,YAAIkB,KAGblB,EAASR,MAqCGU,GAAkB,CAAE0B,UAAU,GAPtC,CAQAC,YAAa,SAAAC,GAAM,OACnB,kBAACC,GAAA,EAAD,iBAAeD,EAAf,CAAuBnF,MAAK,UAAKuD,EAAgB,oBAAoB,kBAAoB9L,QAAQ,WAAW8H,MAAS,CAAC5F,MAAM,YAiBhI,kBAAC0L,EAAA,EAAD,CACEpG,UAAWF,EAAQrF,KACnB4L,oBAAqB,kBAACC,GAAA,EAAD,MACrBC,kBAAmB,kBAACC,GAAA,EAAD,OAvDzB,SAASC,EAAStC,GAOpB,GAAIA,EAAU,OAAOA,EAAM9K,KAAI,SAACoL,EAAMlL,GAChC,OAAO,yBAAKW,IAAG,eAAUX,GAAS+G,MAAO,CAAEtF,QAAS,OAAQa,WAAY,aACtE,kBAAC6K,GAAA,EAAD,CACErO,GAAE,mBAAcoM,EAAKpM,IACrBU,KAAK,QACLD,MAAM,UACN6H,QAASgE,EAAqBF,GAC9B5D,SAAU,SAAC/I,GAAD,OAAO0M,EAAgBC,EAAK3M,EAAEsJ,OAAOT,YAC/C,kBAACuC,GAAD,CAAgByD,OAAQlC,EAAKpM,GAAI0K,UAAW0B,EAAKxL,MAAOkK,OAAQsB,EAAKtB,OAAQC,SAAUqB,EAAKmC,MAdjF,SAACC,GAChB,GAAIA,EACF,OAAOJ,EAASI,GAaXC,CAASrC,EAAKN,YA0CjBsC,CAAStC,M,oGC1Nb7J,GAAYC,aAAW,SAAAC,GAAK,gBAChCC,KAAM,CAEJkI,WAAY,IAEdoE,MAAO,CACL3K,QAAS5B,EAAMK,QAAQ,IAEzBmM,QACA,CACEnJ,SAAU,YAGZoJ,eACA,CAEEjM,QAAS,gBAEXkM,iBACA,CAEElM,QAAS,QAEXmM,YACA,CACEnM,QAAS,eACT8H,YAAa,IAEfsE,cACA,CAEEpM,QAAS,QAEXqM,OACA,CACEC,SAAU,sBAnCoB,sBAsCzB,IAtCyB,uBA+ChC,CACEtM,QAAS,SAhDqB,0BAmDhC,CACE2H,YAAa,KApDiB,sBAuDhC,CACEA,WAAY,KAxDkB,4BA2DhC,CACExH,SAAU,WA5DoB,KAwZnBoM,OAlUf,WAAgB,IAAD,EACmBnJ,IAAMC,SAAS,cADlC,gCAI2BD,IAAMC,SAAS,KAJ1C,mBAINmJ,EAJM,KAIQC,EAJR,OAK6BrJ,IAAMC,SAAS,IAL5C,mBAKNuG,EALM,KAKS8C,EALT,OAM6CtJ,IAAMC,UAAS,GAN5D,mBAMNsJ,EANM,KAMiBC,EANjB,OAOyCxJ,IAAMC,UAAS,GAPxD,mBAONwJ,EAPM,KAOeC,EAPf,OAQuC1J,IAAMC,UAAS,GARtD,mBAQN0J,EARM,KAQcC,EARd,OASqC5J,IAAMC,UAAS,GATpD,mBASN4J,EATM,aAUiC7J,IAAMC,UAAS,IAVhD,mBAUN6J,EAVM,KAUWC,EAVX,OAWmB/J,IAAMC,UAAS,GAXlC,mBAWN4B,EAXM,KAWImI,EAXJ,OAYWhK,IAAMC,UAAS,GAZ1B,gCAaaA,mBAAS,KAbtB,gCAceD,IAAMC,SAAS,QAd9B,mBAcN1C,GAdM,KAcE0M,GAdF,KAmBPC,GAAyB,SAAAxQ,GAG7B,IAAMyQ,EAAgB3D,EAAcvL,KAAI,SAACC,EAAKkP,GAc5C,OAZI1Q,EAAEsJ,OAAO/I,IAAM,gBAAkBiB,EAAKjB,KACxCiB,EAAKuF,eAAiB/G,EAAEsJ,OAAOT,SAC7B7I,EAAEsJ,OAAO/I,IAAM,iBAAmBiB,EAAKjB,KACzCiB,EAAKyF,wBAA0BjH,EAAEsJ,OAAOT,SACtC7I,EAAEsJ,OAAO/I,IAAM,iBAAmBiB,EAAKjB,KACzCiB,EAAK2F,wBAA0BnH,EAAEsJ,OAAOT,SAGtC7I,EAAEsJ,OAAO/I,IAAM,iBAAmBiB,EAAKjB,KACzCiB,EAAK6F,mBAAqBrH,EAAEsJ,OAAOT,SAG9BrH,KAGToO,EAAiBa,IAEbE,GAAeC,aAAgB,SAACpP,GAAD,OACnC,6BACE,kBAAC,EAAD,CACIL,MAAOK,EAAKL,MACZ0P,QAASV,EACT3J,QAASsK,GAAoBtP,EAAKL,OAClC0C,OAAQA,GACR0E,UAjCaoE,EAiCWnL,EAAKL,MAjCR,SAAAnB,GAE3B+Q,GAAapE,KAgCP5D,SAAUyH,GACVzJ,eAAgBvF,EAAKL,MAAM4F,eAC3BE,wBAAyBzF,EAAKL,MAAM8F,wBACpCE,wBAAyB3F,EAAKL,MAAMgG,wBAEpCE,mBAAoB7F,EAAKL,MAAMkG,mBAC/Bc,SAAYA,KAxCC,IAAAwE,KA4CfqE,GAAeC,aAAkB,YAAe,EAAZ3P,MACxC,OACE,6BACGwL,EAAcvL,KAAI,SAACC,EAAMC,GAAP,OACjB,kBAACkP,GAAD,CAAcvO,IAAG,eAAUZ,EAAKjB,IAAMkB,MAAOA,EAAON,MAAOK,WA4CnE,SAASsP,GAAoBnE,GAC3B,IAAIjD,EAAY,CAAEwH,iBAElB,IAAKvE,IAASA,EAAKoC,SAAkC,GAAvBpC,EAAKoC,QAAQhC,UAAiBJ,EAAKoC,QAAQ,KAAMrF,EAAUwH,eACvF,OAAO,KAET,IAAIC,EAAa,GAMjB,OALAxE,EAAKoC,QAAQqC,SAAQ,SAAUzH,GACzBD,EAAUwH,cAAcG,eAAe1H,IACzCwH,EAAWG,KAAK,CAAE,KAAQ3H,EAAG,MAASD,EAAUwH,cAAcvH,QAG3DwH,EAIT,SAASJ,GAAaQ,GACpB,IAAI/D,EAAWV,EAActD,QAAO,SAAUrI,EAAOM,EAAO+P,GAC1D,OAAOrQ,EAAMZ,IAAMgR,EAAahR,MAElCqP,EAAiBpC,GAEnB,IAqEMiE,GAAgB,WACpBpB,GAAmB,IAKfrI,GAAUxF,KAEhB,OACE,yBAAK0F,UAAWF,GAAQrF,MACtB,kBAAC+O,EAAA,EAAD,CAAMlQ,MAAI,GACR,kBAACmQ,GAAA,EAAD,CACE1P,KAAMmO,EACNwB,QAASH,GACTI,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,GAAA,EAAD,CAAaxR,GAAG,sBAAsB,gBACtC,kBAACyR,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAmB1R,GAAG,4BAAtB,iDAIF,kBAAC2R,GAAA,EAAD,KACE,kBAACpR,EAAA,EAAD,CAAQa,QA9BK,WACrB0O,GAAmB,GACnBT,EAAiB,IACjBU,GAAY,IA2B6BtP,MAAM,WAAvC,OAGA,kBAACF,EAAA,EAAD,CAAQa,QAAS8P,GAAezQ,MAAM,UAAUmR,WAAS,GAAzD,SAWN,kBAACT,EAAA,EAAD,CAAMlQ,MAAI,EAAC4Q,GAAI,IACb,kBAACV,EAAA,EAAD,CAAMW,WAAS,EAACC,QAAQ,aAAavP,QAAS,EAAGmF,UAAWF,GAAQuH,QAClE,kBAACmC,EAAA,EAAD,CAAMtP,IAAI,WAAW8F,UAAW2H,EAAwB7H,GAAQqH,YAAcrH,GAAQsH,cAAe9N,MAAI,GACvG,kBAAC,GAAD,CAAa+K,WAAYA,EAAYO,cAAeA,EAAeF,oBApK7E,SAA6BD,EAAM9D,GACjC4E,QAAQC,IAAI,MAAQf,EAAKpM,IACzBkN,QAAQC,IAAI,WAAa7E,GACzB4E,QAAQC,IAAI,uBAAyBZ,EAAcC,QAEnD,IAAIwF,EAAczF,EAAc0F,MAAK,SAAAhR,GAAI,OAAIA,EAAKjB,KAAOoM,EAAKpM,MAE1DsI,IAAY0J,GACd5C,EAAgBhD,GAChBA,EAAK5F,gBAAiB,EACtB4F,EAAK8F,YAAa,EAClB9F,EAAK1F,yBAAwB,EAC7B0F,EAAK+F,kBAAiB,EACtB9C,GAAiB,SAAA9C,GAAa,4BAAQA,GAAR,CAAuBH,OACrDc,QAAQC,IAAIZ,IAELjE,GAGPkI,GAAapE,OAmJT,kBAAC+E,EAAA,EAAD,CAAMtP,IAAI,gBAAgBZ,MAAI,GAC5B,yBAAK0G,UAAW4E,EAAcC,OAAS,EAAI/E,GAAQmH,eAAiBnH,GAAQoH,kBAE1E,kBAACuD,EAAA,EAAD,CAAOpS,GAAG,YAAY2H,UAAWwH,EAAe1H,GAAQiH,MAAQjH,GAAQ7E,OAAQyP,UAAW,GAC3F,yBAAK1J,MAAM,YAEjB,kBAACgB,EAAA,EAAD,CAAMhH,QAAQ,OAAOa,WAAW,aAAa8O,EAAG,EAAGC,EAAG,GACpD,kBAAC5I,EAAA,EAAD,KACA,kCACM,4CAER,kBAACxB,EAAA,EAAD,CAAkBO,MAAM,YAAYN,QAAS,kBAACC,EAAA,EAAD,CAAQC,QAASgH,EAAuB9G,SA3H5D,WAC7B+G,GAAyB,SAAA9G,GAAI,OAAKA,UA8H9B,kBAACN,EAAA,EAAD,CAAkBO,MAAM,QAAQN,QAAS,kBAACC,EAAA,EAAD,CAAQC,QAASoH,EAAoBlH,SAjHpD,WAC9BmH,GAAsB,SAAAlH,GAAI,OAAKA,UAiH3B,kBAACN,EAAA,EAAD,CAAkBO,MAAM,mBAAmBN,QAAS,kBAACC,EAAA,EAAD,CAAQC,QAASkH,EAAqBhH,SArH/D,WAC/BiH,GAAuB,SAAAhH,GAAI,OAAKA,UAqH5B,kBAACN,EAAA,EAAD,CAAkBO,MAAM,YAAYN,QAAS,kBAAC,KAAD,CAAgB3H,MAAOmH,EAAU,UAAU,SAAU9E,SAAS,QAAQ1B,QA3H5F,WAC3B2O,GAAY,SAAAtH,GAAI,OAAKA,MA0HiIR,MAAO,CAAEC,OAAQ,eACnK,kBAACC,EAAA,EAAD,CAAkBO,MAAM,UAAU8J,eAAe,QAAQpK,QACzD,yBAAKO,MAAM,gBACP,kBAAC8J,GAAA,EAAD,CACAjK,SA7DY,SAACT,EAAMnH,GAC3BoP,GAAUpP,IA6DF8R,aAAcpP,GACdgO,kBAAgB,kBAChBqB,kBAAkB,OAClBC,KAAM,EACNC,IAAK,GACLC,IAAK,SAIT,kBAAC3K,EAAA,EAAD,CAAkBF,MAAO,CAAC8K,MAAM,QAASzI,WAAY,QAASlC,QAAS,kBAAC7H,EAAA,EAAD,CAAQG,KAAK,QAAQD,MAAM,YAAYW,QA7H3F,WACvB0O,GAAmB,KA4HwD,aAIrE,kBAACnG,EAAA,EAAD,CAAKhC,UAAW6H,GAAuBE,EAAqB,GAAKjI,GAAQ7E,QACzE,kCACA,0CACE,kBAAC+G,EAAA,EAAD,CAAKhH,QAAQ,OAAOa,WAAW,cAC7B,kBAACmG,EAAA,EAAD,CAAKqJ,UAAU,OAAOrL,UAAW+H,EAAqB,eAAiBjI,GAAQ7E,QAC7E,kBAACuF,EAAA,EAAD,CAAkBqK,eAAe,MAAM9J,MAAO,kBAACG,EAAA,EAAD,CAAYlB,UAAWF,GAAQwL,aAA/B,UAAiE7K,QAAS,yBAAKiD,IAAI,YAAYzB,IAAI,4BACjJ,kBAACzB,EAAA,EAAD,CAAkBqK,eAAe,MAAM9J,MAAO,kBAACG,EAAA,EAAD,CAAYlB,UAAWF,GAAQwL,aAA/B,iBAAwE7K,QAAS,yBAAKiD,IAAI,YAAYzB,IAAI,8BACxJ,kBAACzB,EAAA,EAAD,CAAkBqK,eAAe,MAAM9J,MAAO,kBAACG,EAAA,EAAD,CAAYlB,UAAWF,GAAQwL,aAA/B,WAAkE7K,QAAS,yBAAKiD,IAAI,YAAYzB,IAAI,4BAClJ,kBAACzB,EAAA,EAAD,CAAkBqK,eAAe,MAAM9J,MAAO,kBAACG,EAAA,EAAD,CAAYlB,UAAWF,GAAQwL,aAA/B,WAAkE7K,QAAS,yBAAKiD,IAAI,YAAYzB,IAAI,4BAClJ,kBAACzB,EAAA,EAAD,CAAkBqK,eAAe,MAAM9J,MAAO,kBAACG,EAAA,EAAD,CAAYlB,UAAWF,GAAQwL,aAA/B,aAAoE7K,QAAS,yBAAKiD,IAAI,YAAYzB,IAAI,8BACpJ,kBAACzB,EAAA,EAAD,CAAkBqK,eAAe,MAAM9J,MAAO,kBAACG,EAAA,EAAD,CAAYlB,UAAWF,GAAQwL,aAA/B,SAAgE7K,QAAS,yBAAKiD,IAAI,YAAYzB,IAAI,2BAChJ,kBAACzB,EAAA,EAAD,CAAkBqK,eAAe,MAAM9J,MAAO,kBAACG,EAAA,EAAD,CAAYlB,UAAWF,GAAQwL,aAA/B,cAAqE7K,QAAS,yBAAKiD,IAAI,YAAYzB,IAAI,iCAGvJ,kBAACD,EAAA,EAAD,CAAKqJ,UAAU,OAAOrL,UAAW6H,EAAsB,gBAAkB/H,GAAQ7E,QAC/E,kBAACuF,EAAA,EAAD,CAAkBqK,eAAe,MAAM9J,MAAO,kBAACG,EAAA,EAAD,CAAYlB,UAAWF,GAAQwL,aAA/B,gBAAwE7K,QAAS,yBAAKiD,IAAI,YAAYzB,IAAI,gCACxJ,kBAACzB,EAAA,EAAD,CAAkBqK,eAAe,MAAM9J,MAAO,kBAACG,EAAA,EAAD,CAAYlB,UAAWF,GAAQwL,aAA/B,gBAAuE7K,QAAS,yBAAKiD,IAAI,YAAYzB,IAAI,qCAW/J,yBAAKA,IAAK,wBAAyByB,IAAI,QAAQ1D,UAAWwH,GAAgBO,EAAqBjI,GAAQyL,MAAQzL,GAAQ7E,SACvH,yBAAKgH,IAAK,4BAA6ByB,IAAI,mBAAmB1D,UAAWwH,GAAgBK,EAAsB/H,GAAQ0L,UAAY1L,GAAQ7E,SAGjI,kBAAC6N,GAAD,CAAc1P,MAAOwL,EAAe6G,UA9OlC,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAE7BjE,EAAiBkE,KAAUhH,EAAe8G,EAAUC,KA4OoBE,eAAa,WC1ZrEC,QACW,cAA7BhS,OAAO6F,SAASoM,UAEe,UAA7BjS,OAAO6F,SAASoM,UAEhBjS,OAAO6F,SAASoM,SAASC,MACvB,2DCVNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.dac50367.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 142;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PopupState, { bindTrigger, bindMenu } from 'material-ui-popup-state';\nimport SaveIcon from '@material-ui/icons/Save';\n\nexport default function DropDownButton(props) {\n    function clicked(item,popupState,e)\n    {\n        let path =  item.value;\n        setTimeout(() => {\n          const response = {\n            file: path,\n          };\n          //window.location.href = response.file;\n          window.open(response.file);\n        }, 100);\n        popupState.close();\n    }\n  \n  return (\n    <PopupState variant=\"popover\" popupId=\"demo-popup-menu\">\n      {(popupState) => (\n        <React.Fragment>\n        <Button {...bindTrigger(popupState)} variant=\"outlined\" color=\"primary\" size=\"small\" startIcon={<SaveIcon />}>\n            {props.value}\n        </Button>\n        <Menu {...bindMenu(popupState)}>\n          {\n            props.items.map((item, index) =>\n              <MenuItem onClick={(e) => clicked(item, popupState, e)} key={index} value={item.value}>{item.text}</MenuItem>)\n          }\n        </Menu>\n        </React.Fragment>\n      )}\n    </PopupState>\n  );\n}","import React from 'react';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nfunction ExpandLessOrMore(props) {\n    if (props.isExpanded)\n        return (<ExpandLessIcon onClick={props.onClick} />);\n    else\n        return (<ExpandMoreIcon onClick={props.onClick} />);\n}\nexport default ExpandLessOrMore;","import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames/bind';\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport MuiExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport MuiExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\n\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Divider from '@material-ui/core/Divider';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { withStyles } from '@material-ui/core/styles';\nimport { sortableHandle } from 'react-sortable-hoc';\n\nimport ReorderIcon from '@material-ui/icons/Reorder';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Label } from '@material-ui/icons';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DropDownButton from '../components/DropDownButton'\nimport ExpandLessOrMore from '../components/ExpandLessOrMore'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  button: {\n    margin: theme.spacing(1),\n    textTransform: 'none',\n  },\n  visible:\n  {\n    display: 'inline-block'\n  },\n  hidden:\n  {\n    display: \"none\"\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  icon: {\n    verticalAlign: 'bottom',\n    height: 20,\n    width: 20,\n  },\n  details: {\n    alignItems: 'baseline',\n    display: 'block'\n  },\n  column: {\n    // flexBasis: '33.33%',\n  },\n  leftside: {\n    minWidth: 70\n  },\n  helper: {\n    borderLeft: `2px solid ${theme.palette.divider}`,\n    padding: theme.spacing(1, 2),\n  },\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n    margin: {\n      margin: theme.spacing(1),\n      clear: 'none',\n\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    formGroupRow:\n    {\n      verticalAlign: 'middle',\n    }\n\n  },\n}));\n\n\nconst ExpansionPanel = withStyles({\n  root: {\n    border: '1px solid rgba(0, 0, 0, .125)',\n    boxShadow: 'none',\n    '&:not(:last-child)': {\n      borderBottom: 0,\n    },\n    '&:before': {\n      display: 'none',\n    },\n    '&$expanded': {\n      margin: 'auto',\n    },\n  },\n  expanded: {},\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n  root: {\n    backgroundColor: 'rgba(0, 0, 0, .03)',\n    borderBottom: '1px solid rgba(0, 0, 0, .125)',\n    marginBottom: -1,\n    height: 44,\n    minHeight: 44,\n    maxHeight: 44,\n    '&$expanded': {\n      height: 44,\n      minHeight: 44,\n      maxHeight: 44,\n    },\n  },\n  content: {\n    '&$expanded': {\n      // margin: '12px 0',\n    },\n  },\n  expanded: {},\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiExpansionPanelDetails);\n\nconst StyledFormGroup = withStyles(theme => ({\n  root: {\n    position: 'sticky',\n    left: 0,\n    display: 'flex',\n    placeItems: 'center',\n    width: '1300px',\n    justifyContent: 'space-between',\n  },\n\n}))(FormGroup);\n\nfunction showlabel(prefix, lbl) {\n  if (lbl)\n    return prefix + ': ' + lbl;\n  return \"\";\n}\n// function renderOptions(numbers)\n// {\n//   if (!numbers)\n//     return \"N/A\";\n//   return numbers.map((item,i) => { return (<option key={i} value={item.name}>{item.name}</option>) });\n// }  \nfunction highlightColumn(e) {\n//todo: fix and uncomment\n  // e.preventDefault();\n  // let svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n  // let rect = document.createElementNS(svg.namespaceURI, 'rect');\n  // let x = e.clientX;\n  // let y = e.clientY;\n  // rect.setAttributeNS(null, 'x', 0);\n  // rect.setAttributeNS(null, 'y', 0);\n  // rect.setAttributeNS(null, 'height', e.screenY);\n  // rect.setAttributeNS(null, 'width', '10');\n  // rect.setAttributeNS(null, 'fill', '#ff0000');\n  // rect.setAttributeNS(null, 'style', 'position:absolute;z-index:1;opacity:0.33;');\n\n  // svg.appendChild(rect);\n  // e.currentTarget.appendChild(svg);\n\n}\nfunction KinWeblogo(props) {\n  const [selectedNumbering, setNumbering] = React.useState(props && props.numbers ? props.numbers[0] : '');\n  const [selectedNumberingValue, setNumberingValue] = React.useState('');\n  const [propChanged, setPropChanged] = React.useState(false);\n  const [isExpanded, setIsExpanded] = React.useState(true);\n  const [residueChecked, setResidueChecked] = React.useState(props.residueChecked);\n  const [mutationWeblogosChecked, setMutationWeblogosChecked] = React.useState(props.mutationWeblogosChecked);\n  const [mutationBarchartChecked, setMutationBarchartChecked] = React.useState(props.mutationBarchartChecked);\n  // const [ptmWeblogosChecked, setPtmWeblogosChecked] = React.useState(props.ptmWeblogosChecked);\n  const [ptmBarchartChecked, setPtmBarchartChecked] = React.useState(props.ptmBarchartChecked);\n  const DragHandle = sortableHandle(() => <ReorderIcon />);\n  const numberingclass = classNames({\n    \"numberingdiv\": true,\n    \"hidden\": !(residueChecked || mutationWeblogosChecked || mutationBarchartChecked || ptmBarchartChecked) // || ptmWeblogosChecked\n  });\n\n  function toggleResidue(event) {\n    setResidueChecked(prev => !prev);\n    props.onChange(event);\n  };\n  function toggleMutationBarchart(event) {\n    setMutationBarchartChecked(prev => !prev);\n    props.onChange(event);\n  };\n  function toggleMutationWeblogos(event) {\n    setMutationWeblogosChecked(prev => !prev);\n    props.onChange(event);\n  };\n  // function togglePtmWeblogos(event) {\n  //   setPtmWeblogosChecked(prev => !prev);\n  //   props.onChange(event);\n  // };\n  function togglePtmBarchart(event) {\n    setPtmBarchartChecked(prev => !prev);\n    props.onChange(event);\n  }; \n  //componentDidMount\n\n  function toggleExpanded(event) {\n    setIsExpanded(!isExpanded);\n  };\n  useEffect(() => {\n    //alert(selectedNumbering);\n    //numberingChanged('init',props.numbers);\n    // setNumberingValue('AKT1');\n  }, []);\n\n  const baseUrl = `${window.location.origin.toString()}/`\n\n  const numberingChanged = event => {\n    if (props.numbers && event.target) {\n      const val = props.numbers.filter(function (item) { return item.name == event.target.value });\n      let numbering = \"N/A\";\n      if (val)\n        numbering = val[0].value.map(n => n === null ? '- ' : <span className=\"v\">{n}</span>);\n      //showNumbers()\n      setNumbering({ \"value\": numbering });\n      setPropChanged(true);\n      setNumberingValue(event.target.value);\n    }\n  };\n\n  function getAlignedSequences()\n  {\n    const val= props.value.value;\n    return [{text:'Alignment', value: baseUrl + 'aligned_aln/' + val + '.aln'}, \n            {text:'Full-length seq', value:baseUrl + 'aligned_full/' + val + '.fasta'},\n            {text:'Kinase domain', value:baseUrl + 'aligned_kd/' + val + '.fasta'},\n            {text:'Mutation', value:baseUrl + 'aligned_mut/' + val + '.txt'},\n            {text:'PTM', value:baseUrl + 'aligned_ptm/' + val + '.txt'},\n          ];\n  }\n  \n  function getOrthologSequences()\n  {\n    const val= props.value.value;\n    return [{text:'Alignment', value:baseUrl + 'ortholog_full/' + val + '.fasta'}, \n            {text:'Full-length seq', value:baseUrl + 'ortholog_kd/' + val + '.fasta'},];\n  }\n  \n\n  const classes = useStyles();\n\n  return (\n    //<div className={classes.root}>\n    <div>\n      <ExpansionPanel square expanded={isExpanded}>\n        <ExpansionPanelSummary className={props.viewMode? classes.hidden:''}\n          //expandIcon={<ExpandMoreIcon />} \n          aria-controls=\"panel1d-content\" id=\"panel1d-header\">\n\n          <StyledFormGroup row className={classes.formGroupRow}>\n            <ExpandLessOrMore isExpanded={isExpanded} onClick={toggleExpanded}  />\n            <DragHandle />\n            <DeleteIcon fontSize=\"small\" onClick={props.onRemove} style={{ cursor: \"pointer\" }} />\n            <Button size=\"small\" variant=\"outlined\" color=\"primary\" className={classes.button}>\n              {props.value.value}\n            </Button>\n            <FormControlLabel\n              control={<Switch size=\"small\" id={`res-checkbox-${props.value.id}`} checked={residueChecked} value=\"residue\" onClick={e => { e.stopPropagation(); }} onChange={toggleResidue} />}\n              label=\"Residue\" />\n\n            <FormControlLabel control={<Switch size=\"small\" id={`ptmb-checkbox-${props.value.id}`} checked={ptmBarchartChecked} value=\"ptmb\" onClick={e => { e.stopPropagation(); }} onChange={togglePtmBarchart} />}\n                label=\"PTM\" />\n            <div class=\"weblogo\">\n              <fieldset>\n                <legend>Mutant Type</legend>\n                <FormControlLabel\n                  control={<Switch size=\"small\" id={`mutw-checkbox-${props.value.id}`} checked={mutationWeblogosChecked} value=\"mutationw\" onClick={e => { e.stopPropagation(); }} onChange={toggleMutationWeblogos} />}\n                  label=\"Weblogo\" />\n                <FormControlLabel control={<Switch lable=\"Barchart\" size=\"small\" id={`mutb-checkbox-${props.value.id}`} checked={mutationBarchartChecked} value=\"mutationb\" onClick={e => { e.stopPropagation(); }} onChange={toggleMutationBarchart} />}\n                  label=\"Barchart\" />\n              </fieldset>\n            </div>\n\n\n            <Typography>Reference Position</Typography>\n            <NativeSelect\n              value={selectedNumberingValue}\n              onChange={numberingChanged}\n              onClick={e => { e.stopPropagation(); }}\n              inputProps={{\n                name: 'numbering',\n                id: 'numbering-native-label-placeholder',\n              }}\n            >\n              {/* {renderOptions(props.numbers)} */}\n              {props.numbers ? props.numbers.map((item, i) => { return (<option key={i} value={item.name}>{item.name}</option>) }) : \"\"}\n            </NativeSelect>\n\n            <Typography>Aligned Sequences</Typography>\n            \n              <DropDownButton items={getAlignedSequences()} value={props.value.aligend_seq} />\n              \n              <Typography>Ortholog Sequences</Typography>\n              <DropDownButton items={getOrthologSequences()} value={props.value.ortholog_seq} />\n              \n          </StyledFormGroup>\n\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails className={classes.details}>\n          {/* <div className={classes.leftside}>\n              <FormControl className={classes.formControl}>\n              <InputLabel shrink htmlFor=\"numbering-native-label-placeholder\">\n                Alignments\n              </InputLabel>\n          \n            </FormControl>\n         </div> */}\n          <Box>\n            {/* <img id={`weblogo-${props.value.id}`} className={residueChecked ? classes.visible: classes.hidden} src={`sequences/${props.highres?\"highres\":\"png\"}/${props.value.path}.${props.highres?\"png\":\"png\"}`} height={props.height?props.height:\"188\"} width={props.width ? props.width:\"4857\"}  /> */}\n            <img id={`weblogo-${props.value.id}`} className={residueChecked ? classes.visible : classes.hidden} src={`sequences/png/${props.value.path}.png`} height={props.height ? props.height : \"188\"} width={props.width ? props.width : \"4840\"} />\n          </Box>\n          <Box className={mutationWeblogosChecked ? classes.visible : classes.hidden}>\n            <img id={`mutationw-${props.value.id}`} src={`mutations/weblogos/png/${props.value.path}.png`} height={props.height ? props.height : \"188\"} width={props.width ? props.width : \"4840\"} />\n          </Box>\n          <Box className={ptmBarchartChecked ? classes.visible : classes.hidden}>\n            <img id={`ptm-${props.value.id}`} src={`ptm/barchart/png/${props.value.path}.png`} height={props.height ? props.height : \"188\"} width={props.width ? props.width : \"4840\"} />\n          </Box>\n          <Box className={mutationBarchartChecked ? classes.visible : classes.hidden}>\n            <img id={`mutationb-${props.value.id}`} src={`mutations/barchart/png/${props.value.path}.png`} height={props.height ? props.height : \"188\"} width={props.width ? props.width : \"4840\"} />\n          </Box>\n          {/* <Box className={ptmWeblogosChecked ? classes.visible : classes.hidden}>\n            <img id={`ptm-${props.value.id}`} src={`ptm/weblogos/png/${props.value.path}.png`} height={props.height ? props.height : \"188\"} width={props.width ? props.width : \"4840\"} />\n          </Box> */}\n   \n\n          \n          <div className={numberingclass}>\n            {selectedNumbering ? selectedNumbering.value.map((n, index) => n === null ? <span key={`p${index}`} className=\"v\">-</span> : <span key={`p${index}`} onClick={highlightColumn} className=\"v\">{n}</span>) : \"\"}\n          </div>\n\n\n\n        </ExpansionPanelDetails>\n        {/* <Divider />\n       <ExpansionPanelActions>\n         <Button size=\"small\">Cancel</Button>\n         <Button size=\"small\" color=\"primary\">\n           Save\n         </Button>\n       </ExpansionPanelActions> */}\n      </ExpansionPanel>\n    </div>\n\n  );\n}\nfunction memoize() {\n  return false;\n}\nexport default KinWeblogo;\n//export default React.memo(KinWeblogo,memoize);\n","import React, { useRef, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TreeView from '@material-ui/lab/TreeView';\nimport TreeItem from '@material-ui/lab/TreeItem';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport tree from '../data/classification.json';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport { ArrowRight, ArrowDropDown, NoMeetingRoom } from '@material-ui/icons';\nimport { getNodeMajorVersion } from 'typescript';\nimport Switch from '@material-ui/core/Switch';\n\n\nconst useTreeItemStyles = makeStyles(theme => ({\n  root: {\n    color: theme.palette.text.primary,\n    '&:focus > $content': {\n      backgroundColor: `var(--tree-view-bg-color, ${theme.palette.grey[400]})`,\n      color: 'var(--tree-view-color)',\n    },\n  },\n  content: {\n    color: theme.palette.text.primary,\n    borderTopRightRadius: theme.spacing(2),\n    borderBottomRightRadius: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n    fontWeight: theme.typography.fontWeightMedium,\n    '$expanded > &': {\n      fontWeight: theme.typography.fontWeightRegular,\n    },\n  },\n  group: {\n    marginLeft: 0,\n    '& $content': {\n      // paddingLeft: theme.spacing(2),\n    },\n  },\n  expanded: {},\n  label: {\n    fontWeight: 'inherit',\n    color: 'inherit',\n  },\n  labelRoot: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0.2, 0),\n    margin: -5\n  },\n  labelIcon: {\n    marginRight: theme.spacing(1),\n  },\n  labelText: {\n    fontWeight: 'inherit',\n    flexGrow: 1,\n  },\n}));\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    // height: 216,\n    flexGrow: 1,\n    maxWidth: 200,\n    position: 'relative',\n    marginLeft: -15\n  }\n\n}));\n\nfunction StyledTreeItem(props) {\n  const classes = useTreeItemStyles();\n  const { isDark, nodeType, labelText, labelIcon: LabelIcon, labelIconColor, labelInfo, color, bgColor, ...other } = props;\n\n  return (\n    <TreeItem\n      label={\n        <div className={classes.labelRoot}>\n          {\n            nodeType == 'protein' && isDark?\n            <img alt=\"Select Dark Kinase\" src=\"img/kinase_dark.svg\" width=\"22px\" />\n            :''\n          }\n          {\n            nodeType == 'protein' && !isDark?\n            // <WellknownIcon className={classes.labelIcon} />\n            <img alt=\"Well-known Kinase\" src=\"img/kinase_wellknown.svg\" width=\"22px\" />\n            :''\n          }\n          <Typography variant=\"body2\" className={classes.labelText}>\n            {labelText}\n          </Typography>\n          <Typography variant=\"caption\" color=\"inherit\">\n            {labelInfo}\n          </Typography>\n        </div>\n      }\n      style={{\n        '--tree-view-color': color,\n        '--tree-view-bg-color': bgColor,\n      }}\n      classes={{\n        root: classes.root,\n        content: classes.content,\n        expanded: classes.expanded,\n        group: classes.group,\n        label: classes.label,\n      }}\n      {...other}\n    />\n  );\n}\n\nStyledTreeItem.propTypes = {\n  bgColor: PropTypes.string,\n  color: PropTypes.string,\n  labelIcon: PropTypes.elementType,\n  labelInfo: PropTypes.string,\n  labelText: PropTypes.string.isRequired,\n};\n\n// const useStyles = makeStyles({\n//   root: {\n//     height: 264,\n//     flexGrow: 1,\n//     maxWidth: 400,\n//   },\n// });\n\nfunction KinTreeView(props) {\n  const mod_tree = tree[0].concat(tree[1])\n  const originalNodes = mod_tree.map((n)=>{n.checked=false;return n;});\n  const nodesCopy = JSON.parse(JSON.stringify(originalNodes));\n  \n  const classes = useStyles();\n  \n  //const [nodes, setNodes] = React.useState(props.nodes);\n  const [nodes,setNodes] = React.useState(originalNodes);\n  const [darkKinase] = React.useState(props.darkKinase);\n  const [switchOnlyDark, setSwitchOnlyDark] = React.useState(false);\n\n  const filterInput = useRef(null);\n\n  useEffect(() => {\n    let node = originalNodes.filter(x=>x.id==\"id@PK\")[0];\n    node.checked=true;    \n    handleNodeClick(node,true);\n  },[nodes]);\n\n  function handleNodeClick(node,checked) {\n    props.onCheckBoxesChanged(node, checked);\n  }\n  const handleOnlyDark = () => {\n    setSwitchOnlyDark(prev => !prev);\n  };\n  function checkInSelectedNodes(node) {\n    return props.selectedNodes.filter(n => n.id == node.id).length > 0;\n  }\n\n  function handleFilterChange(e,val) {\n    console.log(\"val=\"+ val);\n    let filtered;\n    if (val) {\n      filtered = nodesCopy.filter(function iter(o) {\n        if (o.value.toLowerCase().includes(val.toLowerCase())) {\n          return true;\n        }\n        if (!Array.isArray(o.nodes)) {\n          return false;\n        }\n        let temp = o.nodes.filter(iter);\n        if (temp.length) {\n          o.nodes = temp;\n          filtered = temp;\n\n          return true;\n        }\n      });\n      setNodes([...filtered]);\n    }\n    else\n      setNodes(originalNodes);\n    //filterInput.current.focus();\n\n  }\n  function makeTree(nodes) {\n    const children = (members) => {\n      if (members) {\n        return makeTree(members);\n      }\n    }\n\nif (nodes)    return nodes.map((node, index) => {\n      return <div key={`node-${index}`} style={{ display: 'flex', alignItems: 'baseline' }}>\n        <Checkbox\n          id={`checkbox-${node.id}`}\n          size='small'\n          color=\"primary\"\n          checked={checkInSelectedNodes(node)}\n          onChange={(e) => handleNodeClick(node,e.target.checked)}/>\n          <StyledTreeItem nodeId={node.id} labelText={node.value} isDark={node.isDark} nodeType={node.type} >\n            {children(node.nodes)}\n          </StyledTreeItem>\n      </div>\n    })\n  }\n\n  return (\n\n    <div>\n        <FormControlLabel style={{width:'max-content'}} label=\"Only Dark Kinase\" control={<Switch checked={switchOnlyDark} onChange={handleOnlyDark} />} />\n          <Autocomplete\n           size=\"small\"\n          //ref={filterInput}\n          id=\"input-with-icon-grid\" \n          options={switchOnlyDark?darkKinase:undefined}\n          getOptionLabel={option => option.value}\n          onInputChange={handleFilterChange}\n          { ...( !switchOnlyDark && { freeSolo: true } ) } \n          renderInput={params => (\n          <TextField {...params} label={`${switchOnlyDark? \"Select Dark Kinas\":\"Search Kinaese\"}`} variant=\"outlined\" style = {{width:170}}  />\n      )}\n    />\n\n      {/* <TextField autoFocus ref={filterInput}\n          id=\"input-with-icon-grid\" \n          label=\"Filter\" \n          onChange={handleFilterChange}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <Search />\n              </InputAdornment>\n            ),\n          }}\n      /> */}\n\n      <TreeView\n        className={classes.root}\n        defaultCollapseIcon={<ArrowDropDown />}\n        defaultExpandIcon={<ArrowRight />}\n      >\n        {\n          makeTree(nodes)\n          //   nodes.map(function(item, idx){\n          //   return (<TreeItem nodeId={item.id} label={item.value}/>)\n          // })}\n        }\n      </TreeView>\n    </div>\n  );\n}\nfunction memoize() {\n  //because we don't want to re-render the dendrogram\n  return true;\n}\n//const KinTreeView = React.memo(KinTreeViewFunc,memoize);\nexport default KinTreeView;","//https://aspenmesh.io/2019/03/using-d3-in-react-a-pattern-for-using-data-visualization-at-scale/\nimport React, { useRef, useEffect, useState } from 'react';\nimport './App.css';\n//import MuiTreeView from 'material-ui-treeview';\n\nimport darkKinase from './data/dark_list.json'\nimport numberingjson from './data/numbering.json';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { makeStyles } from '@material-ui/core/styles';\n//import * as d3 from \"d3\";\nimport KinWeblogo from './components/KinWeblogo'\nimport KinTreeView from './components/KinTreeView'\nimport Switch from '@material-ui/core/Switch';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Slider from '@material-ui/core/Slider';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Box from '@material-ui/core/Box';\n// const rowWidth = 30, rowHeight = 120;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    // flexGrow: 1,\n    marginLeft: 30,\n  },\n  paper: {\n    padding: theme.spacing(0),\n  },\n  leftBox:\n  {\n    position: 'relative',\n    // zIndex:'top'\n  },\n  mainBoxVisible:\n  {\n    //marginLeft: 200,\n    display: 'inline-block'\n  },\n  mainBoxInvisible:\n  {\n    // marginLeft: 215,\n    display: 'none'\n  },\n  treeVisible:\n  {\n    display: 'inline-block',\n    marginRight: 40\n  },\n  treeInvisible:\n  {\n    //marginLeft: 0,\n    display: 'none'\n  },\n  nowrap:\n  {\n    flexWrap: \"nowrap !important\",\n  },\n\n  paper: {\n    // backgroundColor: theme.palette.background.paper,\n    // border: '0px solid #000',\n    // boxShadow: \"none\",//theme.shadows[5],\n    // padding: theme.spacing(3, 10, 1),\n    // minWidth: 400,\n    // overflow: 'auto'\n  },\n  hidden:\n  {\n    display: \"none\"\n  },\n  structure:\n  {\n    marginLeft: -20,\n  },\n  motif:\n  {\n    marginLeft: 15,\n  },\n  legendLabel:\n  {\n    fontSize: '0.8rem',\n  }\n}));\n// console.log(tree);\n// const imgLogoStyle = {\n//   width: '100px'\n// };\nconst imgUgaLogoStyle = {\n  float: 'right',\n  width: '120px',\n  marginTop: '-40px'\n};\n\n// const treeStyles = {\n//   control: styles => ({ ...styles, color: 'red' }),\n//   text: (styles, { text, childPanel }) => {\n//     //const color = chroma(data.color);\n//     return {\n//       ...styles,\n//       backgroundColor: 'blue',\n//       color: 'green',\n//     };\n//   },\n// };\n\n\nfunction App() {\n  const [rdbvalue, setRdbValue] = React.useState('rdbResidue');\n  // const [firstLabel, setFirstLabel] = React.useState('');\n  // const [secondLabel, setSecondLabel] = React.useState('');\n  const [selectedNode, setSelectedNode] = React.useState('');\n  const [selectedNodes, setSelectedNodes] = React.useState([]);\n  const [switchShowTreeChecked, setSwitchShowTreeChecked] = React.useState(true);\n  const [switchDomainChecked, setSwitchDomainChecked] = React.useState(false);\n  const [switchMotifChecked, setSwitchMotifChecked] = React.useState(false);\n  const [switchHighResChecked, setHighResChecked] = React.useState(false);\n  const [openResetDialog, setOpenResetDialog] = React.useState(false);\n  const [viewMode, setViewMode] = React.useState(false);\n  const [open, setOpen] = React.useState(false);\n  const [items, setItems] = useState([]);\n  const [height, setHeight] = React.useState(\"100\");\n  const weblogoRemove= node => e =>\n  {\n    handleDelete(node);\n  }\n  const weblogoCheckboxChanged = e =>\n  {\n    //let node = selectedNodes.filter(k => k.id == val.id);\n    const modifiedNodes = selectedNodes.map((item,j)=>\n    {\n      if (e.target.id == \"res-checkbox-\" + item.id )\n        item.residueChecked = e.target.checked;\n      if (e.target.id == \"mutw-checkbox-\" + item.id )\n        item.mutationWeblogosChecked = e.target.checked;\n      if (e.target.id == \"mutb-checkbox-\" + item.id )\n        item.mutationBarchartChecked = e.target.checked;\n      // if (e.target.id == \"ptmw-checkbox-\" + item.id )\n      //   item.ptmWeblogosChecked = e.target.checked;\n      if (e.target.id == \"ptmb-checkbox-\" + item.id )\n        item.ptmBarchartChecked = e.target.checked;\n      \n      \n      return item;\n    });\n    \n    setSelectedNodes(modifiedNodes);\n  }\n  const SortableItem = SortableElement((item) =>\n    <div>\n      <KinWeblogo \n          value={item.value}\n          highres={switchHighResChecked} \n          numbers={getCandidateNumbers(item.value)} \n          height={height} \n          onRemove={weblogoRemove(item.value)}\n          onChange={weblogoCheckboxChanged}\n          residueChecked={item.value.residueChecked} \n          mutationWeblogosChecked={item.value.mutationWeblogosChecked}\n          mutationBarchartChecked={item.value.mutationBarchartChecked}\n          //ptmWeblogosChecked={item.value.ptmWeblogosChecked}\n          ptmBarchartChecked={item.value.ptmBarchartChecked}\n          viewMode = {viewMode}\n           />\n    </div>\n  );\n  const SortableList = SortableContainer(({ items }) => {\n    return (\n      <div>\n        {selectedNodes.map((item, index) => (\n          <SortableItem key={`item-${item.id}`} index={index} value={item} />\n          //     <KinWeblogo src={'weblogos/' + item.path} label={item.value} numbers={getCandidateNumbers(item)}/>\n        ))}\n      </div>\n    );\n  });\n  const onSortEnd = ({ oldIndex, newIndex }) => {\n\n    setSelectedNodes(arrayMove(selectedNodes, oldIndex, newIndex));\n  };\n\n\n  function treeCheckboxChanged(node, checked) {\n    console.log(\"id=\" + node.id);\n    console.log(\"checked=\" + checked);\n    console.log(\"treeCheckboxChanged:\" + selectedNodes.length);\n\n    let alreadyAdded =selectedNodes.some(item => item.id === node.id);\n    \n    if (checked && !alreadyAdded) { //add the selection to selectedNodes\n      setSelectedNode(node);\n      node.residueChecked = true;\n      node.ptmChecked = false;\n      node.mutationWeblogosChecked=false;\n      node.mutationBarchart=false;\n      setSelectedNodes(selectedNodes => [...selectedNodes, node]);\n      console.log(selectedNodes);\n    }\n    else if(!checked) //remvoe the Selection\n    {\n      //setSelectedNode('');\n      handleDelete(node);\n    }\n\n  }\n  // function nodeSelected(node)\n  // {\n\n  //   // if (rdbvalue === 'rdbfirst')\n  //   //   setFirstLabel(node.value);\n  //   // else if (rdbvalue === 'rdbsecond')\n  //   //   setSecondLabel(node.value);\n\n  // }\n  function getCandidateNumbers(node) {\n    let numbering = { numberingjson }\n    //todo: members[0] should be a dropdown box\n    if (!node || !node.members || node.members.length == 0 || !(node.members[0] in numbering.numberingjson))\n      return null;\n\n    let candidates = []\n    node.members.forEach(function (n) {\n      if (numbering.numberingjson.hasOwnProperty(n))\n        candidates.push({ \"name\": n, \"value\": numbering.numberingjson[n] });\n    });\n\n    return candidates;\n    //return numbering.numberingjson[node.members[0]];\n  }\n\n  function handleDelete(nodeToDelete) {\n    var filtered = selectedNodes.filter(function (value, index, arr) {\n      return value.id != nodeToDelete.id;\n    });\n    setSelectedNodes(filtered);\n  }\n  const handleTreeSwitchChange = () => {\n    setSwitchShowTreeChecked(prev => !prev);\n  };\n  const handleHighResChange = () => {\n    setHighResChecked(prev => !prev);\n  };\n  const handleViewModechange = () => {\n    setViewMode(prev => !prev);\n  };\n  \n  \n  const handleDomainSwitchChange = () => {\n    setSwitchDomainChecked(prev => !prev);\n  };\n  const handleMotifSwitchChange = () => {\n    setSwitchMotifChecked(prev => !prev);\n  };\n\n  const handleResetClick = () => {\n    setOpenResetDialog(true);\n  }\n\n\n\n  //   function renderWeblogos()\n  // {\n  //   if (selectedNodes.length == 0)\n  //     return \"N/A\";\n  //   return selectedNodes.map((item,i) => { return (\n  //     <KinWeblogo src={'weblogos/' + item.path} label={item.value} numbers={getCandidateNumbers(item)}/>\n  //   ) });\n  // }\n  // function getImage(lbl)\n  // {\n  //   console.log(lbl)\n  //   let src = '';\n  //   if (lbl !== '')\n  //     src = 'weblogos/PK_' + lbl + '.png';\n\n  //   return src;\n  // }\n\n  // function drawd()\n  // {\n  //   var img = document.getElementById(\"firstImage\");\n  //   if (img!==null && img.src!=='')\n  //   {  \n\n  //     var cnvs = document.getElementById(\"firstCanvas\");\n  //    console.log(cnvs);\n  //     cnvs.style.position = \"absolute\";\n  //     cnvs.style.left = img.offsetLeft + \"px\";\n  //     cnvs.style.top = img.offsetTop + \"px\";\n\n  //     var ctx = cnvs.getContext(\"2d\");\n  //     ctx.beginPath();\n  //     ctx.arc(250, 210, 200, 0, 2 * Math.PI, false);\n  //     ctx.lineWidth = 3;\n  //     ctx.strokeStyle = '#00ff00';\n  //     ctx.stroke();\n  //   }\n  // }\n\n  const handleCloseYes = () => {\n    setOpenResetDialog(false);\n    setSelectedNodes([]);\n    setViewMode(false);\n  };\n\n  const handleCloseNo = () => {\n    setOpenResetDialog(false);\n  };\n  const heightChanged = (event,value) => {\n    setHeight(value);\n  };\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid item>\n        <Dialog\n          open={openResetDialog}\n          onClose={handleCloseNo}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Confirmation\"}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              Do you want to remove all of the selections?\n          </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleCloseYes} color=\"primary\">\n              Yes\n          </Button>\n            <Button onClick={handleCloseNo} color=\"primary\" autoFocus>\n              No\n          </Button>\n          </DialogActions>\n        </Dialog>\n\n\n        {/* <SelectionBox items={selectedNodes} onDelete={handleDelete} /> */}\n      </Grid>\n\n\n      <Grid item xs={12}>\n        <Grid container justify=\"flex-start\" spacing={1} className={classes.nowrap}>\n          <Grid key=\"leftTree\" className={switchShowTreeChecked ? classes.treeVisible : classes.treeInvisible} item>\n            <KinTreeView darkKinase={darkKinase} selectedNodes={selectedNodes} onCheckBoxesChanged={treeCheckboxChanged} />\n          </Grid>\n          <Grid key=\"rightContents\" item>\n            <div className={selectedNodes.length > 0 ? classes.mainBoxVisible : classes.mainBoxInvisible}>\n\n              <Paper id=\"mainPaper\" className={selectedNode ? classes.paper : classes.hidden} elevation={0}>\n              <div class=\"settings\">\n        \n        <Box  display=\"flex\" alignItems=\"flex-start\" p={1} m={1}>\n          <Box>\n          <fieldset>\n                <legend>Settings</legend>\n\n        <FormControlLabel label=\"Hierarchy\" control={<Switch checked={switchShowTreeChecked} onChange={handleTreeSwitchChange} />} />\n        \n         {/* <Switch checked={viewMode} onChange={handleViewModechange} />} /> */}\n        {/* <FormControlLabel label=\"High-Res\" control={<Switch checked={switchHighResChecked} onChange={handleHighResChange} />} />         */}\n        <FormControlLabel label=\"Motif\" control={<Switch checked={switchMotifChecked} onChange={handleMotifSwitchChange} />} />\n        <FormControlLabel label=\"Domain Structure\" control={<Switch checked={switchDomainChecked} onChange={handleDomainSwitchChange} />} />\n        <FormControlLabel label=\"View Mode\" control={<VisibilityIcon color={viewMode? \"primary\":\"action\"} fontSize=\"small\" onClick={handleViewModechange} style={{ cursor: \"pointer\" }} />} />\n        <FormControlLabel label=\"Height \" labelPlacement=\"start\" control={\n        <div class=\"sliderHeight\">\n            <Slider\n            onChange={heightChanged}\n            defaultValue={height}\n            aria-labelledby=\"discrete-slider\"\n            valueLabelDisplay=\"auto\"\n            step={5}\n            min={50}\n            max={150}\n          />\n       </div>\n        } />\n        <FormControlLabel style={{float:'right', marginLeft: '30px'}} control={<Button size=\"small\" color=\"secondary\" onClick={handleResetClick}>Reset</Button>} />\n\n        </fieldset>\n          </Box>\n          <Box className={switchDomainChecked || switchMotifChecked ? \"\" : classes.hidden}>\n          <fieldset>\n          <legend>Legend</legend>\n            <Box display=\"flex\" alignItems=\"flex-start\">\n              <Box component=\"span\" className={switchMotifChecked ? \"legend-motif\" : classes.hidden}>\n                <FormControlLabel labelPlacement='end' label={<Typography className={classes.legendLabel}>Lysine</Typography>} control={<img alt=\"betasheet\" src=\"img/legend/lysine.png\" />} />\n                <FormControlLabel labelPlacement='end' label={<Typography className={classes.legendLabel}>Glutamic acid</Typography>} control={<img alt=\"betasheet\" src=\"img/legend/glutamic.png\" />} />\n                <FormControlLabel labelPlacement='end' label={<Typography className={classes.legendLabel}>C-spine</Typography>} control={<img alt=\"betasheet\" src=\"img/legend/cspine.png\" />} />\n                <FormControlLabel labelPlacement='end' label={<Typography className={classes.legendLabel}>R-spine</Typography>} control={<img alt=\"betasheet\" src=\"img/legend/rspine.png\" />} />\n                <FormControlLabel labelPlacement='end' label={<Typography className={classes.legendLabel}>RD pocket</Typography>} control={<img alt=\"betasheet\" src=\"img/legend/rdpocket.png\" />} />\n                <FormControlLabel labelPlacement='end' label={<Typography className={classes.legendLabel}>Shell</Typography>} control={<img alt=\"betasheet\" src=\"img/legend/shell.png\" />} />\n                <FormControlLabel labelPlacement='end' label={<Typography className={classes.legendLabel}>Gatekeeper</Typography>} control={<img alt=\"betasheet\" src=\"img/legend/gatekeeper.png\" />} />\n\n              </Box>\n              <Box component=\"span\" className={switchDomainChecked ? \"legend-domain\" : classes.hidden}>\n                <FormControlLabel labelPlacement='end' label={<Typography className={classes.legendLabel}>&alpha;-helix</Typography>} control={<img alt=\"betasheet\" src=\"img/legend/alphahelix.png\" />} />\n                <FormControlLabel labelPlacement='end' label={<Typography className={classes.legendLabel}>&beta;-sheet</Typography>} control={<img alt=\"betasheet\" src=\"img/legend/betasheet.png\" />} />\n              </Box>\n            </Box>\n          \n        </fieldset>\n          </Box>\n        </Box>\n        \n        \n        </div>\n\n        <img src={'img/KinView_Motif.png'} alt=\"Motif\" className={selectedNode && switchMotifChecked ? classes.motif : classes.hidden} />\n        <img src={'img/KinView_Structure.png'} alt=\"Domain Structure\" className={selectedNode && switchDomainChecked ? classes.structure : classes.hidden} />\n\n                {\n                  <SortableList items={selectedNodes} onSortEnd={onSortEnd} useDragHandle />\n                  // selectedNodes.map(function (item, idx) {\n                  //   return //(<KinWeblogo src={'weblogos/' + item.path} height=\"140\"  label={item.value} numbers={getCandidateNumbers(item)} />)\n                  // })\n                }\n\n              </Paper>\n            </div>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}