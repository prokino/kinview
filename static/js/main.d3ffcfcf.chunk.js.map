{"version":3,"sources":["../node_modules/typescript/lib sync","components/KinWeblogo.js","components/KinTreeView.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","useStyles","makeStyles","theme","root","width","button","margin","spacing","visible","display","hidden","heading","fontSize","typography","pxToRem","secondaryHeading","color","palette","text","secondary","icon","verticalAlign","height","details","alignItems","column","leftside","minWidth","helper","borderLeft","divider","padding","link","primary","main","textDecoration","clear","formControl","formGroupRow","ExpansionPanel","withStyles","border","boxShadow","borderBottom","expanded","MuiExpansionPanel","ExpansionPanelSummary","backgroundColor","marginBottom","minHeight","maxHeight","content","MuiExpansionPanelSummary","ExpansionPanelDetails","MuiExpansionPanelDetails","StyledFormGroup","position","left","placeItems","justifyContent","FormGroup","highlightColumn","preventDefault","svg","document","createElementNS","rect","namespaceURI","setAttributeNS","screenY","appendChild","currentTarget","KinWeblogo","props","React","useState","numbers","selectedNumbering","setNumbering","selectedNumberingValue","setNumberingValue","setPropChanged","residueChecked","setResidueChecked","mutationWeblogosChecked","setMutationWeblogosChecked","mutationBarchartChecked","setMutationBarchartChecked","ptmBarchartChecked","setPtmBarchartChecked","DragHandle","sortableHandle","numberingclass","classNames","useEffect","classes","square","defaultExpanded","className","viewMode","aria-controls","row","onClick","onRemove","style","cursor","Button","size","variant","value","NativeSelect","onChange","event","target","val","filter","item","name","numbering","map","n","stopPropagation","inputProps","i","key","FormControlLabel","control","Switch","checked","prev","label","class","lable","Box","src","path","index","useTreeItemStyles","grey","borderTopRightRadius","borderBottomRightRadius","paddingRight","fontWeight","fontWeightMedium","fontWeightRegular","group","marginLeft","labelRoot","labelIcon","marginRight","labelText","flexGrow","maxWidth","StyledTreeItem","isDark","nodeType","labelInfo","labelIconColor","bgColor","other","TreeItem","alt","Typography","KinTreeView","originalNodes","tree","nodesCopy","JSON","parse","stringify","nodes","setNodes","darkKinase","switchOnlyDark","setSwitchOnlyDark","handleNodeClick","node","onCheckBoxesChanged","checkInSelectedNodes","selectedNodes","length","useRef","x","Autocomplete","options","undefined","getOptionLabel","option","onInputChange","filtered","console","log","iter","o","toLowerCase","includes","Array","isArray","temp","freeSolo","renderInput","params","TextField","TreeView","defaultCollapseIcon","ArrowDropDown","defaultExpandIcon","ArrowRight","makeTree","Checkbox","nodeId","type","members","children","paper","leftBox","mainBoxVisible","mainBoxInvisible","treeVisible","treeInvisible","nowrap","flexWrap","App","selectedNode","setSelectedNode","setSelectedNodes","switchShowTreeChecked","setSwitchShowTreeChecked","switchDomainChecked","setSwitchDomainChecked","switchHighResChecked","openResetDialog","setOpenResetDialog","setViewMode","setHeight","weblogoCheckboxChanged","modifiedNodes","j","SortableItem","SortableElement","highres","getCandidateNumbers","handleDelete","SortableList","SortableContainer","items","numberingjson","candidates","forEach","hasOwnProperty","push","nodeToDelete","arr","handleCloseNo","Grid","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","xs","container","justify","ptmChecked","mutationBarchart","Paper","elevation","labelPlacement","Slider","defaultValue","valueLabelDisplay","step","min","max","float","structure","onSortEnd","oldIndex","newIndex","arrayMove","useDragHandle","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d3ffcfcf.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 121;","import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames/bind';\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport MuiExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport MuiExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Divider from '@material-ui/core/Divider';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { withStyles } from '@material-ui/core/styles';\nimport { sortableHandle } from 'react-sortable-hoc';\nimport ReorderIcon from '@material-ui/icons/Reorder';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  visible:\n  {\n    display: 'inline-block'\n  },\n  hidden:\n  {\n    display: \"none\"\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  icon: {\n    verticalAlign: 'bottom',\n    height: 20,\n    width: 20,\n  },\n  details: {\n    alignItems: 'baseline',\n    display: 'block'\n  },\n  column: {\n    // flexBasis: '33.33%',\n  },\n  leftside: {\n    minWidth: 70\n  },\n  helper: {\n    borderLeft: `2px solid ${theme.palette.divider}`,\n    padding: theme.spacing(1, 2),\n  },\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n    margin: {\n      margin: theme.spacing(1),\n      clear: 'none',\n\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    formGroupRow:\n    {\n      verticalAlign: 'middle',\n    }\n\n  },\n}));\n\n\nconst ExpansionPanel = withStyles({\n  root: {\n    border: '1px solid rgba(0, 0, 0, .125)',\n    boxShadow: 'none',\n    '&:not(:last-child)': {\n      borderBottom: 0,\n    },\n    '&:before': {\n      display: 'none',\n    },\n    '&$expanded': {\n      margin: 'auto',\n    },\n  },\n  expanded: {},\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n  root: {\n    backgroundColor: 'rgba(0, 0, 0, .03)',\n    borderBottom: '1px solid rgba(0, 0, 0, .125)',\n    marginBottom: -1,\n    height: 44,\n    minHeight: 44,\n    maxHeight: 44,\n    '&$expanded': {\n      height: 44,\n      minHeight: 44,\n      maxHeight: 44,\n    },\n  },\n  content: {\n    '&$expanded': {\n      // margin: '12px 0',\n    },\n  },\n  expanded: {},\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiExpansionPanelDetails);\n\nconst StyledFormGroup = withStyles(theme => ({\n  root: {\n    position: 'sticky',\n    left: 0,\n    display: 'flex',\n    placeItems: 'center',\n    width: '745px',\n    justifyContent: 'space-between',\n  },\n\n}))(FormGroup);\n\nfunction showlabel(prefix, lbl) {\n  if (lbl)\n    return prefix + ': ' + lbl;\n  return \"\";\n}\n// function renderOptions(numbers)\n// {\n//   if (!numbers)\n//     return \"N/A\";\n//   return numbers.map((item,i) => { return (<option key={i} value={item.name}>{item.name}</option>) });\n// }  \nfunction highlightColumn(e) {\n  e.preventDefault();\n  var svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n  var rect = document.createElementNS(svg.namespaceURI, 'rect');\n\n  rect.setAttributeNS(null, 'x', 0);\n  rect.setAttributeNS(null, 'y', 0);\n  rect.setAttributeNS(null, 'height', e.screenY);\n  rect.setAttributeNS(null, 'width', '10');\n  rect.setAttributeNS(null, 'fill', '#ff0000');\n  rect.setAttributeNS(null, 'style', 'position:absolute;z-index:1;opacity:0.33;top:40px;');\n\n  svg.appendChild(rect);\n  e.currentTarget.appendChild(svg);\n\n  // var h=document.createElement('a');\n  // h.setAttribute('href', 'http://www.google.com');\n  // var t=document.createTextNode('Hello World');\n  // h.appendChild(t);\n  // document.body.appendChild(h);\n}\nfunction KinWeblogo(props) {\n  const [selectedNumbering, setNumbering] = React.useState(props && props.numbers ? props.numbers[0] : '');\n  const [selectedNumberingValue, setNumberingValue] = React.useState('');\n  const [propChanged, setPropChanged] = React.useState(false);\n  const [residueChecked, setResidueChecked] = React.useState(props.residueChecked);\n  const [mutationWeblogosChecked, setMutationWeblogosChecked] = React.useState(props.mutationWeblogosChecked);\n  const [mutationBarchartChecked, setMutationBarchartChecked] = React.useState(props.mutationBarchartChecked);\n  // const [ptmWeblogosChecked, setPtmWeblogosChecked] = React.useState(props.ptmWeblogosChecked);\n  const [ptmBarchartChecked, setPtmBarchartChecked] = React.useState(props.ptmBarchartChecked);\n  const DragHandle = sortableHandle(() => <ReorderIcon />);\n  const numberingclass = classNames({\n    \"numberingdiv\": true,\n    \"hidden\": !(residueChecked || mutationWeblogosChecked || mutationBarchartChecked || ptmBarchartChecked) // || ptmWeblogosChecked\n  });\n\n  function toggleResidue(event) {\n    setResidueChecked(prev => !prev);\n    props.onChange(event);\n  };\n  function toggleMutationBarchart(event) {\n    setMutationBarchartChecked(prev => !prev);\n    props.onChange(event);\n  };\n  function toggleMutationWeblogos(event) {\n    setMutationWeblogosChecked(prev => !prev);\n    props.onChange(event);\n  };\n  // function togglePtmWeblogos(event) {\n  //   setPtmWeblogosChecked(prev => !prev);\n  //   props.onChange(event);\n  // };\n  function togglePtmBarchart(event) {\n    setPtmBarchartChecked(prev => !prev);\n    props.onChange(event);\n  }; \n  //componentDidMount\n\n  useEffect(() => {\n    //alert(selectedNumbering);\n    //numberingChanged('init',props.numbers);\n    // setNumberingValue('AKT1');\n  }, []);\n\n\n  const numberingChanged = event => {\n    if (props.numbers && event.target) {\n      const val = props.numbers.filter(function (item) { return item.name == event.target.value });\n      let numbering = \"N/A\";\n      if (val)\n        numbering = val[0].value.map(n => n === null ? '- ' : <span className=\"v\">{n}</span>);\n      //showNumbers()\n      setNumbering({ \"value\": numbering });\n      setPropChanged(true);\n      setNumberingValue(event.target.value);\n    }\n  };\n\n  const classes = useStyles();\n\n  return (\n    //<div className={classes.root}>\n    <div>\n      <ExpansionPanel square defaultExpanded>\n        <ExpansionPanelSummary className={props.viewMode? classes.hidden:''}\n          //expandIcon={<ExpandMoreIcon />} \n          aria-controls=\"panel1d-content\" id=\"panel1d-header\">\n\n          <StyledFormGroup row className={classes.formGroupRow}>\n            <DragHandle />\n            <DeleteIcon fontSize=\"small\" onClick={props.onRemove} style={{ cursor: \"pointer\" }} />\n            <Button size=\"small\" variant=\"outlined\" color=\"primary\" className={classes.button}>\n              {props.value.value}\n            </Button>\n            <NativeSelect\n              value={selectedNumberingValue}\n              onChange={numberingChanged}\n              onClick={e => { e.stopPropagation(); }}\n              inputProps={{\n                name: 'numbering',\n                id: 'numbering-native-label-placeholder',\n              }}\n            >\n              {/* {renderOptions(props.numbers)} */}\n              {props.numbers ? props.numbers.map((item, i) => { return (<option key={i} value={item.name}>{item.name}</option>) }) : \"\"}\n\n\n            </NativeSelect>\n\n            <FormControlLabel\n              control={<Switch size=\"small\" id={`res-checkbox-${props.value.id}`} checked={residueChecked} value=\"residue\" onClick={e => { e.stopPropagation(); }} onChange={toggleResidue} />}\n              label=\"Residue\" />\n              <FormControlLabel control={<Switch size=\"small\" id={`ptmb-checkbox-${props.value.id}`} checked={ptmBarchartChecked} value=\"ptmb\" onClick={e => { e.stopPropagation(); }} onChange={togglePtmBarchart} />}\n                label=\"PTM\" />\n            <div class=\"weblogo\">\n              <fieldset>\n                <legend>Mutant Type</legend>\n                <FormControlLabel\n                  control={<Switch size=\"small\" id={`mutw-checkbox-${props.value.id}`} checked={mutationWeblogosChecked} value=\"mutationw\" onClick={e => { e.stopPropagation(); }} onChange={toggleMutationWeblogos} />}\n                  label=\"Weblogo\" />\n                <FormControlLabel control={<Switch lable=\"Barchart\" size=\"small\" id={`mutb-checkbox-${props.value.id}`} checked={mutationBarchartChecked} value=\"mutationb\" onClick={e => { e.stopPropagation(); }} onChange={toggleMutationBarchart} />}\n                  label=\"Barchart\" />\n              </fieldset>\n            </div>\n\n            {/* <div class=\"weblogo\">\n            <fieldset>\n              <legend>PTM</legend>\n              <FormControlLabel\n                control={<Switch size=\"small\" id={`ptmw-checkbox-${props.value.id}`} checked={ptmWeblogosChecked} value=\"ptmw\" onClick={e => { e.stopPropagation(); }} onChange={togglePtmWeblogos} />}\n                label=\"Weblogo\" />\n              <FormControlLabel control={<Switch size=\"small\" id={`ptmb-checkbox-${props.value.id}`} checked={ptmBarchartChecked} value=\"ptmb\" onClick={e => { e.stopPropagation(); }} onChange={togglePtmBarchart} />}\n                label=\"Barchart\" />\n            </fieldset>\n            </div> */}\n          </StyledFormGroup>\n\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails className={classes.details}>\n          {/* <div className={classes.leftside}>\n              <FormControl className={classes.formControl}>\n              <InputLabel shrink htmlFor=\"numbering-native-label-placeholder\">\n                Alignments\n              </InputLabel>\n          \n            </FormControl>\n         </div> */}\n          <Box>\n            {/* <img id={`weblogo-${props.value.id}`} className={residueChecked ? classes.visible: classes.hidden} src={`sequences/${props.highres?\"highres\":\"png\"}/${props.value.path}.${props.highres?\"png\":\"png\"}`} height={props.height?props.height:\"188\"} width={props.width ? props.width:\"4857\"}  /> */}\n            <img id={`weblogo-${props.value.id}`} className={residueChecked ? classes.visible : classes.hidden} src={`sequences/png/${props.value.path}.png`} height={props.height ? props.height : \"188\"} width={props.width ? props.width : \"4840\"} />\n          </Box>\n          <Box className={mutationWeblogosChecked ? classes.visible : classes.hidden}>\n            <img id={`mutationw-${props.value.id}`} src={`mutations/weblogos/png/${props.value.path}.png`} height={props.height ? props.height : \"188\"} width={props.width ? props.width : \"4840\"} />\n          </Box>\n          <Box className={ptmBarchartChecked ? classes.visible : classes.hidden}>\n            <img id={`ptm-${props.value.id}`} src={`ptm/barchart/png/${props.value.path}.png`} height={props.height ? props.height : \"188\"} width={props.width ? props.width : \"4840\"} />\n          </Box>\n          <Box className={mutationBarchartChecked ? classes.visible : classes.hidden}>\n            <img id={`mutationb-${props.value.id}`} src={`mutations/barchart/png/${props.value.path}.png`} height={props.height ? props.height : \"188\"} width={props.width ? props.width : \"4840\"} />\n          </Box>\n          {/* <Box className={ptmWeblogosChecked ? classes.visible : classes.hidden}>\n            <img id={`ptm-${props.value.id}`} src={`ptm/weblogos/png/${props.value.path}.png`} height={props.height ? props.height : \"188\"} width={props.width ? props.width : \"4840\"} />\n          </Box> */}\n   \n\n          \n          <div className={numberingclass}>\n            {selectedNumbering ? selectedNumbering.value.map((n, index) => n === null ? <span key={`p${index}`} className=\"v\">-</span> : <span key={`p${index}`} onClick={highlightColumn} className=\"v\">{n}</span>) : \"\"}\n          </div>\n\n\n\n        </ExpansionPanelDetails>\n        {/* <Divider />\n       <ExpansionPanelActions>\n         <Button size=\"small\">Cancel</Button>\n         <Button size=\"small\" color=\"primary\">\n           Save\n         </Button>\n       </ExpansionPanelActions> */}\n      </ExpansionPanel>\n    </div>\n\n  );\n}\nfunction memoize() {\n  return false;\n}\nexport default KinWeblogo;\n//export default React.memo(KinWeblogo,memoize);\n","import React, { useRef, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TreeView from '@material-ui/lab/TreeView';\nimport TreeItem from '@material-ui/lab/TreeItem';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport tree from '../data/classification.json';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport { ArrowRight, ArrowDropDown, NoMeetingRoom } from '@material-ui/icons';\nimport { getNodeMajorVersion } from 'typescript';\nimport Switch from '@material-ui/core/Switch';\n\n\nconst useTreeItemStyles = makeStyles(theme => ({\n  root: {\n    color: theme.palette.text.primary,\n    '&:focus > $content': {\n      backgroundColor: `var(--tree-view-bg-color, ${theme.palette.grey[400]})`,\n      color: 'var(--tree-view-color)',\n    },\n  },\n  content: {\n    color: theme.palette.text.primary,\n    borderTopRightRadius: theme.spacing(2),\n    borderBottomRightRadius: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n    fontWeight: theme.typography.fontWeightMedium,\n    '$expanded > &': {\n      fontWeight: theme.typography.fontWeightRegular,\n    },\n  },\n  group: {\n    marginLeft: 0,\n    '& $content': {\n      // paddingLeft: theme.spacing(2),\n    },\n  },\n  expanded: {},\n  label: {\n    fontWeight: 'inherit',\n    color: 'inherit',\n  },\n  labelRoot: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0.2, 0),\n    margin: -5\n  },\n  labelIcon: {\n    marginRight: theme.spacing(1),\n  },\n  labelText: {\n    fontWeight: 'inherit',\n    flexGrow: 1,\n  },\n}));\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    // height: 216,\n    flexGrow: 1,\n    maxWidth: 200,\n    position: 'relative',\n    marginLeft: -15\n  }\n\n}));\n\nfunction StyledTreeItem(props) {\n  const classes = useTreeItemStyles();\n  const { isDark, nodeType, labelText, labelIcon: LabelIcon, labelIconColor, labelInfo, color, bgColor, ...other } = props;\n\n  return (\n    <TreeItem\n      label={\n        <div className={classes.labelRoot}>\n          {\n            nodeType == 'protein' && isDark?\n            <img alt=\"Select Dark Kinase\" src=\"img/kinase_dark.svg\" width=\"22px\" />\n            :''\n          }\n          {\n            nodeType == 'protein' && !isDark?\n            // <WellknownIcon className={classes.labelIcon} />\n            <img alt=\"Well-known Kinase\" src=\"img/kinase_wellknown.svg\" width=\"22px\" />\n            :''\n          }\n          <Typography variant=\"body2\" className={classes.labelText}>\n            {labelText}\n          </Typography>\n          <Typography variant=\"caption\" color=\"inherit\">\n            {labelInfo}\n          </Typography>\n        </div>\n      }\n      style={{\n        '--tree-view-color': color,\n        '--tree-view-bg-color': bgColor,\n      }}\n      classes={{\n        root: classes.root,\n        content: classes.content,\n        expanded: classes.expanded,\n        group: classes.group,\n        label: classes.label,\n      }}\n      {...other}\n    />\n  );\n}\n\nStyledTreeItem.propTypes = {\n  bgColor: PropTypes.string,\n  color: PropTypes.string,\n  labelIcon: PropTypes.elementType,\n  labelInfo: PropTypes.string,\n  labelText: PropTypes.string.isRequired,\n};\n\n// const useStyles = makeStyles({\n//   root: {\n//     height: 264,\n//     flexGrow: 1,\n//     maxWidth: 400,\n//   },\n// });\n\nfunction KinTreeView(props) {\n  const originalNodes = tree.map((n)=>{n.checked=false;return n;});\n  const nodesCopy = JSON.parse(JSON.stringify(originalNodes));\n  \n  const classes = useStyles();\n  \n  //const [nodes, setNodes] = React.useState(props.nodes);\n  const [nodes,setNodes] = React.useState(originalNodes);\n  const [darkKinase] = React.useState(props.darkKinase);\n  const [switchOnlyDark, setSwitchOnlyDark] = React.useState(false);\n\n  const filterInput = useRef(null);\n\n  useEffect(() => {\n    let node = originalNodes.filter(x=>x.id==\"id@PK\")[0];\n    node.id=\"id@PK\";\n    node.checked=true;    \n    handleNodeClick(node,true);\n  },[nodes]);\n\n  function handleNodeClick(node,checked) {\n    props.onCheckBoxesChanged(node, checked);\n  }\n  const handleOnlyDark = () => {\n    setSwitchOnlyDark(prev => !prev);\n  };\n  function checkInSelectedNodes(node) {\n    return props.selectedNodes.filter(n => n.id == node.id).length > 0;\n  }\n\n  function handleFilterChange(e,val) {\n    console.log(\"val=\"+ val);\n    let filtered;\n    if (val) {\n      filtered = nodesCopy.filter(function iter(o) {\n        if (o.value.toLowerCase().includes(val.toLowerCase())) {\n          return true;\n        }\n        if (!Array.isArray(o.nodes)) {\n          return false;\n        }\n        let temp = o.nodes.filter(iter);\n        if (temp.length) {\n          o.nodes = temp;\n          filtered = temp;\n\n          return true;\n        }\n      });\n      setNodes([...filtered]);\n    }\n    else\n      setNodes(originalNodes);\n    //filterInput.current.focus();\n\n  }\n  function makeTree(nodes) {\n    const children = (members) => {\n      if (members) {\n        return makeTree(members);\n      }\n    }\n\nif (nodes)    return nodes.map((node, index) => {\n      return <div key={`node-${index}`} style={{ display: 'flex', alignItems: 'baseline' }}>\n        <Checkbox\n          id={`checkbox-${node.id}`}\n          size='small'\n          color=\"primary\"\n          checked={checkInSelectedNodes(node)}\n          onChange={(e) => handleNodeClick(node,e.target.checked)}/>\n          <StyledTreeItem nodeId={node.id} labelText={node.value} isDark={node.isDark} nodeType={node.type} >\n            {children(node.nodes)}\n          </StyledTreeItem>\n      </div>\n    })\n  }\n\n  return (\n\n    <div>\n        <FormControlLabel style={{width:'max-content'}} label=\"Only Dark Kinase\" control={<Switch checked={switchOnlyDark} onChange={handleOnlyDark} />} />\n          <Autocomplete\n           size=\"small\"\n          //ref={filterInput}\n          id=\"input-with-icon-grid\" \n          options={switchOnlyDark?darkKinase:undefined}\n          getOptionLabel={option => option.value}\n          onInputChange={handleFilterChange}\n          { ...( !switchOnlyDark && { freeSolo: true } ) } \n          renderInput={params => (\n          <TextField {...params} label={`${switchOnlyDark? \"Select Dark Kinas\":\"Search Kinaese\"}`} variant=\"outlined\" style = {{width:170}}  />\n      )}\n    />\n\n      {/* <TextField autoFocus ref={filterInput}\n          id=\"input-with-icon-grid\" \n          label=\"Filter\" \n          onChange={handleFilterChange}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <Search />\n              </InputAdornment>\n            ),\n          }}\n      /> */}\n\n      <TreeView\n        className={classes.root}\n        defaultCollapseIcon={<ArrowDropDown />}\n        defaultExpandIcon={<ArrowRight />}\n      >\n        {\n          makeTree(nodes)\n          //   nodes.map(function(item, idx){\n          //   return (<TreeItem nodeId={item.id} label={item.value}/>)\n          // })}\n        }\n      </TreeView>\n    </div>\n  );\n}\nfunction memoize() {\n  //because we don't want to re-render the dendrogram\n  return true;\n}\n//const KinTreeView = React.memo(KinTreeViewFunc,memoize);\nexport default KinTreeView;","//https://aspenmesh.io/2019/03/using-d3-in-react-a-pattern-for-using-data-visualization-at-scale/\nimport React, { useRef, useEffect, useState } from 'react';\nimport './App.css';\n//import MuiTreeView from 'material-ui-treeview';\n\nimport darkKinase from './data/dark_list.json'\nimport numberingjson from './data/numbering.json';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { makeStyles } from '@material-ui/core/styles';\n//import * as d3 from \"d3\";\nimport KinWeblogo from './components/KinWeblogo'\nimport KinTreeView from './components/KinTreeView'\nimport Switch from '@material-ui/core/Switch';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Slider from '@material-ui/core/Slider';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\n\n// const rowWidth = 30, rowHeight = 120;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    // flexGrow: 1,\n    marginLeft: 30,\n  },\n  paper: {\n    padding: theme.spacing(0),\n  },\n  leftBox:\n  {\n    position: 'relative',\n    // zIndex:'top'\n  },\n  mainBoxVisible:\n  {\n    //marginLeft: 200,\n    display: 'inline-block'\n  },\n  mainBoxInvisible:\n  {\n    // marginLeft: 215,\n    display: 'none'\n  },\n  treeVisible:\n  {\n    display: 'inline-block',\n    marginRight: 40\n  },\n  treeInvisible:\n  {\n    //marginLeft: 0,\n    display: 'none'\n  },\n  nowrap:\n  {\n    flexWrap: \"nowrap !important\",\n  },\n\n  paper: {\n    // backgroundColor: theme.palette.background.paper,\n    // border: '0px solid #000',\n    // boxShadow: \"none\",//theme.shadows[5],\n    // padding: theme.spacing(3, 10, 1),\n    // minWidth: 400,\n    // overflow: 'auto'\n  },\n  hidden:\n  {\n    display: \"none\"\n  },\n  structure:\n  {\n    marginLeft: -20,\n  }\n}));\n// console.log(tree);\n// const imgLogoStyle = {\n//   width: '100px'\n// };\nconst imgUgaLogoStyle = {\n  float: 'right',\n  width: '120px',\n  marginTop: '-40px'\n};\n\n// const treeStyles = {\n//   control: styles => ({ ...styles, color: 'red' }),\n//   text: (styles, { text, childPanel }) => {\n//     //const color = chroma(data.color);\n//     return {\n//       ...styles,\n//       backgroundColor: 'blue',\n//       color: 'green',\n//     };\n//   },\n// };\n\n\nfunction App() {\n  const [rdbvalue, setRdbValue] = React.useState('rdbResidue');\n  // const [firstLabel, setFirstLabel] = React.useState('');\n  // const [secondLabel, setSecondLabel] = React.useState('');\n  const [selectedNode, setSelectedNode] = React.useState('');\n  const [selectedNodes, setSelectedNodes] = React.useState([]);\n  const [switchShowTreeChecked, setSwitchShowTreeChecked] = React.useState(true);\n  const [switchDomainChecked, setSwitchDomainChecked] = React.useState(false);\n  const [switchHighResChecked, setHighResChecked] = React.useState(false);\n  const [openResetDialog, setOpenResetDialog] = React.useState(false);\n  const [viewMode, setViewMode] = React.useState(false);\n  const [open, setOpen] = React.useState(false);\n  const [items, setItems] = useState([]);\n  const [height, setHeight] = React.useState(\"100\");\n  const weblogoRemove= node => e =>\n  {\n    handleDelete(node);\n  }\n  const weblogoCheckboxChanged = e =>\n  {\n    //let node = selectedNodes.filter(k => k.id == val.id);\n    const modifiedNodes = selectedNodes.map((item,j)=>\n    {\n      if (e.target.id == \"res-checkbox-\" + item.id )\n        item.residueChecked = e.target.checked;\n      if (e.target.id == \"mutw-checkbox-\" + item.id )\n        item.mutationWeblogosChecked = e.target.checked;\n      if (e.target.id == \"mutb-checkbox-\" + item.id )\n        item.mutationBarchartChecked = e.target.checked;\n      // if (e.target.id == \"ptmw-checkbox-\" + item.id )\n      //   item.ptmWeblogosChecked = e.target.checked;\n      if (e.target.id == \"ptmb-checkbox-\" + item.id )\n        item.ptmBarchartChecked = e.target.checked;\n      \n      \n      return item;\n    });\n    \n    setSelectedNodes(modifiedNodes);\n  }\n  const SortableItem = SortableElement((item) =>\n    <div>\n      <KinWeblogo \n          value={item.value}\n          highres={switchHighResChecked} \n          numbers={getCandidateNumbers(item.value)} \n          height={height} \n          onRemove={weblogoRemove(item.value)}\n          onChange={weblogoCheckboxChanged}\n          residueChecked={item.value.residueChecked} \n          mutationWeblogosChecked={item.value.mutationWeblogosChecked}\n          mutationBarchartChecked={item.value.mutationBarchartChecked}\n          //ptmWeblogosChecked={item.value.ptmWeblogosChecked}\n          ptmBarchartChecked={item.value.ptmBarchartChecked}\n          viewMode = {viewMode}\n           />\n    </div>\n  );\n  const SortableList = SortableContainer(({ items }) => {\n    return (\n      <div>\n        {selectedNodes.map((item, index) => (\n          <SortableItem key={`item-${item.id}`} index={index} value={item} />\n          //     <KinWeblogo src={'weblogos/' + item.path} label={item.value} numbers={getCandidateNumbers(item)}/>\n        ))}\n      </div>\n    );\n  });\n  const onSortEnd = ({ oldIndex, newIndex }) => {\n\n    setSelectedNodes(arrayMove(selectedNodes, oldIndex, newIndex));\n  };\n\n  // useEffect(() => {\n  //   setSelectedNodes(originalNodes.filter(x=>x.id==\"id@PK\"));\n  // }, [selectedNodes]);\n\n\n  function treeCheckboxChanged(node, checked) {\n    console.log(\"id=\" + node.id);\n    console.log(\"checked=\" + checked);\n    console.log(\"treeCheckboxChanged:\" + selectedNodes.length);\n\n    if (checked) { //add the selection to selectedNodes\n      setSelectedNode(node);\n      node.residueChecked = true;\n      node.ptmChecked = false;\n      node.mutationWeblogosChecked=false;\n      node.mutationBarchart=false;\n      setSelectedNodes(selectedNodes => [...selectedNodes, node]);\n      console.log(selectedNodes);\n    }\n    else //remvoe the Selection\n    {\n      //setSelectedNode('');\n      handleDelete(node);\n    }\n\n  }\n  // function nodeSelected(node)\n  // {\n\n  //   // if (rdbvalue === 'rdbfirst')\n  //   //   setFirstLabel(node.value);\n  //   // else if (rdbvalue === 'rdbsecond')\n  //   //   setSecondLabel(node.value);\n\n  // }\n  function getCandidateNumbers(node) {\n    let numbering = { numberingjson }\n    //todo: members[0] should be a dropdown box\n    if (!node || !node.members || node.members.length == 0 || !(node.members[0] in numbering.numberingjson))\n      return null;\n\n    let candidates = []\n    node.members.forEach(function (n) {\n      if (numbering.numberingjson.hasOwnProperty(n))\n        candidates.push({ \"name\": n, \"value\": numbering.numberingjson[n] });\n    });\n\n    return candidates;\n    //return numbering.numberingjson[node.members[0]];\n  }\n\n  function handleDelete(nodeToDelete) {\n    var filtered = selectedNodes.filter(function (value, index, arr) {\n      return value.id != nodeToDelete.id;\n    });\n    setSelectedNodes(filtered);\n  }\n  const handleTreeSwitchChange = () => {\n    setSwitchShowTreeChecked(prev => !prev);\n  };\n  const handleHighResChange = () => {\n    setHighResChecked(prev => !prev);\n  };\n  const handleViewModechange = () => {\n    setViewMode(prev => !prev);\n  };\n  \n  \n  const handleDomainSwitchChange = () => {\n    setSwitchDomainChecked(prev => !prev);\n  };\n  const handleResetClick = () => {\n    setOpenResetDialog(true);\n  }\n\n\n\n  //   function renderWeblogos()\n  // {\n  //   if (selectedNodes.length == 0)\n  //     return \"N/A\";\n  //   return selectedNodes.map((item,i) => { return (\n  //     <KinWeblogo src={'weblogos/' + item.path} label={item.value} numbers={getCandidateNumbers(item)}/>\n  //   ) });\n  // }\n  // function getImage(lbl)\n  // {\n  //   console.log(lbl)\n  //   let src = '';\n  //   if (lbl !== '')\n  //     src = 'weblogos/PK_' + lbl + '.png';\n\n  //   return src;\n  // }\n\n  // function drawd()\n  // {\n  //   var img = document.getElementById(\"firstImage\");\n  //   if (img!==null && img.src!=='')\n  //   {  \n\n  //     var cnvs = document.getElementById(\"firstCanvas\");\n  //    console.log(cnvs);\n  //     cnvs.style.position = \"absolute\";\n  //     cnvs.style.left = img.offsetLeft + \"px\";\n  //     cnvs.style.top = img.offsetTop + \"px\";\n\n  //     var ctx = cnvs.getContext(\"2d\");\n  //     ctx.beginPath();\n  //     ctx.arc(250, 210, 200, 0, 2 * Math.PI, false);\n  //     ctx.lineWidth = 3;\n  //     ctx.strokeStyle = '#00ff00';\n  //     ctx.stroke();\n  //   }\n  // }\n\n  const handleCloseYes = () => {\n    setOpenResetDialog(false);\n    setSelectedNodes([]);\n    setViewMode(false);\n  };\n\n  const handleCloseNo = () => {\n    setOpenResetDialog(false);\n  };\n  const heightChanged = (event,value) => {\n    setHeight(value);\n  };\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid item>\n        \n\n        <Dialog\n          open={openResetDialog}\n          onClose={handleCloseNo}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Confirmation\"}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              Do you want to remove all of the selections?\n          </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleCloseYes} color=\"primary\">\n              Yes\n          </Button>\n            <Button onClick={handleCloseNo} color=\"primary\" autoFocus>\n              No\n          </Button>\n          </DialogActions>\n        </Dialog>\n\n\n        {/* <SelectionBox items={selectedNodes} onDelete={handleDelete} /> */}\n      </Grid>\n\n\n      <Grid item xs={12}>\n        <Grid container justify=\"flex-start\" spacing={1} className={classes.nowrap}>\n          <Grid key=\"leftTree\" className={switchShowTreeChecked ? classes.treeVisible : classes.treeInvisible} item>\n            <KinTreeView darkKinase={darkKinase} selectedNodes={selectedNodes} onCheckBoxesChanged={treeCheckboxChanged} />\n          </Grid>\n          <Grid key=\"rightContents\" item>\n            <div className={selectedNodes.length > 0 ? classes.mainBoxVisible : classes.mainBoxInvisible}>\n\n              <Paper id=\"mainPaper\" className={selectedNode ? classes.paper : classes.hidden} elevation={0}>\n              <div class=\"settings\">\n        <fieldset>\n                <legend>Settings</legend>\n\n        <FormControlLabel label=\"Hierarchy\" control={<Switch checked={switchShowTreeChecked} onChange={handleTreeSwitchChange} />} />\n        \n         {/* <Switch checked={viewMode} onChange={handleViewModechange} />} /> */}\n        {/* <FormControlLabel label=\"High-Res\" control={<Switch checked={switchHighResChecked} onChange={handleHighResChange} />} />         */}\n        <FormControlLabel label=\"Domain Structure\" control={<Switch checked={switchDomainChecked} onChange={handleDomainSwitchChange} />} />\n        <FormControlLabel label=\"View Mode\" control={<VisibilityIcon color={viewMode? \"primary\":\"action\"} fontSize=\"small\" onClick={handleViewModechange} style={{ cursor: \"pointer\" }} />} />\n        <FormControlLabel label=\"Height \" labelPlacement=\"start\" control={\n        <div class=\"sliderHeight\">\n            <Slider\n            onChange={heightChanged}\n            defaultValue={height}\n            aria-labelledby=\"discrete-slider\"\n            valueLabelDisplay=\"auto\"\n            step={5}\n            min={50}\n            max={150}\n          />\n       </div>\n        } />\n        <FormControlLabel style={{float:'right'}} control={<Button size=\"small\" color=\"secondary\" onClick={handleResetClick}>Reset</Button>} />\n\n        </fieldset>\n        </div>\n        <img src={'img/KinView_Structure.png'} className={selectedNode && switchDomainChecked ? classes.structure : classes.hidden} />\n\n                {\n                  <SortableList items={selectedNodes} onSortEnd={onSortEnd} useDragHandle />\n                  // selectedNodes.map(function (item, idx) {\n                  //   return //(<KinWeblogo src={'weblogos/' + item.path} height=\"140\"  label={item.value} numbers={getCandidateNumbers(item)} />)\n                  // })\n                }\n\n              </Paper>\n            </div>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}