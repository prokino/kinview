{"version":3,"sources":["../node_modules/typescript/lib sync","components/KinWeblogo.js","components/KinTreeView.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","useStyles","makeStyles","theme","root","width","button","margin","spacing","visible","display","hidden","heading","fontSize","typography","pxToRem","secondaryHeading","color","palette","text","secondary","icon","verticalAlign","height","details","alignItems","column","leftside","minWidth","helper","borderLeft","divider","padding","link","primary","main","textDecoration","clear","formControl","formGroupRow","ExpansionPanel","withStyles","border","boxShadow","borderBottom","expanded","MuiExpansionPanel","ExpansionPanelSummary","backgroundColor","marginBottom","minHeight","maxHeight","content","MuiExpansionPanelSummary","ExpansionPanelDetails","MuiExpansionPanelDetails","StyledFormGroup","position","left","placeItems","FormGroup","highlightColumn","preventDefault","svg","document","createElementNS","rect","namespaceURI","setAttributeNS","screenY","appendChild","currentTarget","KinWeblogo","props","React","useState","numbers","selectedNumbering","setNumbering","selectedNumberingValue","setNumberingValue","setPropChanged","residueChecked","setResidueChecked","mutationWeblogosChecked","setMutationWeblogosChecked","mutationBarchartChecked","setmutationBarchartChecked","ptmChecked","setPtmChecked","DragHandle","sortableHandle","numberingclass","classNames","useEffect","classes","square","defaultExpanded","aria-controls","row","className","onClick","onRemove","style","cursor","Button","size","variant","value","NativeSelect","onChange","event","target","val","filter","item","name","numbering","map","n","stopPropagation","inputProps","i","key","FormControlLabel","control","Switch","checked","prev","label","Box","src","path","index","useTreeItemStyles","grey","borderTopRightRadius","borderBottomRightRadius","paddingRight","fontWeight","fontWeightMedium","fontWeightRegular","group","marginLeft","labelRoot","labelIcon","marginRight","labelText","flexGrow","maxWidth","StyledTreeItem","isDark","nodeType","labelInfo","labelIconColor","bgColor","other","TreeItem","alt","Typography","KinTreeView","originalNodes","tree","nodesCopy","JSON","parse","stringify","nodes","setNodes","darkKinase","checkInSelectedNodes","node","selectedNodes","length","useRef","Autocomplete","options","getOptionLabel","option","onInputChange","filtered","console","log","iter","o","toLowerCase","includes","Array","isArray","temp","freeSolo","renderInput","params","TextField","TreeView","defaultCollapseIcon","ArrowDropDown","defaultExpandIcon","ArrowRight","makeTree","Checkbox","onCheckBoxesChanged","handleNodeClick","nodeId","type","members","children","paper","leftBox","mainBoxVisible","mainBoxInvisible","treeVisible","treeInvisible","nowrap","flexWrap","App","selectedNode","setSelectedNode","setSelectedNodes","switchShowTreeChecked","setSwitchShowTreeChecked","switchDomainChecked","setSwitchDomainChecked","switchHighResChecked","openResetDialog","setOpenResetDialog","setHeight","weblogoCheckboxChanged","modifiedNodes","j","SortableItem","SortableElement","highres","getCandidateNumbers","handleDelete","SortableList","SortableContainer","items","numberingjson","candidates","forEach","hasOwnProperty","push","nodeToDelete","arr","handleCloseNo","Grid","labelPlacement","Slider","defaultValue","aria-labelledby","valueLabelDisplay","step","min","max","Dialog","open","onClose","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","xs","container","justify","mutationBarchart","structure","Paper","elevation","onSortEnd","oldIndex","newIndex","arrayMove","useDragHandle","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e01c4fe9.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 120;","import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames/bind';\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport MuiExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport MuiExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Divider from '@material-ui/core/Divider';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { withStyles } from '@material-ui/core/styles';\nimport {sortableHandle} from 'react-sortable-hoc';\nimport ReorderIcon from '@material-ui/icons/Reorder';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    visible:\n    {\n      display: 'inline-block'\n    },\n    hidden: \n    { \n      display:\"none\"\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n    },\n    secondaryHeading: {\n      fontSize: theme.typography.pxToRem(15),\n      color: theme.palette.text.secondary,\n    },\n    icon: {\n      verticalAlign: 'bottom',\n      height: 20,\n      width: 20,\n    },\n    details: {\n      alignItems: 'baseline',\n      display:'block'\n    },\n    column: {\n      // flexBasis: '33.33%',\n    },\n    leftside:{\n      minWidth: 70\n    },\n    helper: {\n      borderLeft: `2px solid ${theme.palette.divider}`,\n      padding: theme.spacing(1, 2),\n    },\n    link: {\n      color: theme.palette.primary.main,\n      textDecoration: 'none',\n      '&:hover': {\n        textDecoration: 'underline',\n      },\n      margin: {\n        margin: theme.spacing(1),\n        clear:'none',\n\n      },\n      formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n      },\n      formGroupRow :\n      {\n        verticalAlign:'middle',\n      }\n        \n    },\n  }));\n\n\nconst ExpansionPanel = withStyles({\n  root: {\n    border: '1px solid rgba(0, 0, 0, .125)',\n    boxShadow: 'none',\n    '&:not(:last-child)': {\n      borderBottom: 0,\n    },\n    '&:before': {\n      display: 'none',\n    },\n    '&$expanded': {\n      margin: 'auto',\n    },\n  },\n  expanded: {},\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n  root: {\n    backgroundColor: 'rgba(0, 0, 0, .03)',\n    borderBottom: '1px solid rgba(0, 0, 0, .125)',\n    marginBottom: -1,\n    height: 44,\n    minHeight: 44,\n    maxHeight: 44,\n    '&$expanded': {\n      height: 44,\n      minHeight: 44,\n      maxHeight: 44,\n    },\n  },\n  content: {\n    '&$expanded': {\n      // margin: '12px 0',\n    },\n  },\n  expanded: {},\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiExpansionPanelDetails);\n\nconst StyledFormGroup = withStyles(theme => ({\n  root: {\n    position:'sticky',\n    left:0,\n    display: 'flex',\n    placeItems: 'center'\n  },\n  \n}))(FormGroup);\n\nfunction showlabel(prefix,lbl)  \n{\n  if (lbl)\n    return prefix + ': ' + lbl;\n  return \"\";\n}\n// function renderOptions(numbers)\n// {\n//   if (!numbers)\n//     return \"N/A\";\n//   return numbers.map((item,i) => { return (<option key={i} value={item.name}>{item.name}</option>) });\n// }  \nfunction highlightColumn(e)\n{\n    e.preventDefault();\n    var svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n    var rect = document.createElementNS(svg.namespaceURI,'rect');\n\n    rect.setAttributeNS(null, 'x', 0);\n    rect.setAttributeNS(null, 'y', 0);\n    rect.setAttributeNS(null, 'height', e.screenY);\n    rect.setAttributeNS(null, 'width', '10');\n    rect.setAttributeNS(null, 'fill', '#ff0000');\n    rect.setAttributeNS(null,'style','position:absolute;z-index:1;opacity:0.33;top:40px;');\n\n    svg.appendChild(rect);\n    e.currentTarget.appendChild(svg);\n\n    // var h=document.createElement('a');\n    // h.setAttribute('href', 'http://www.google.com');\n    // var t=document.createTextNode('Hello World');\n    // h.appendChild(t);\n    // document.body.appendChild(h);\n}\nfunction KinWeblogo(props)\n{\n    const [selectedNumbering, setNumbering] = React.useState(props && props.numbers?props.numbers[0]:'');\n    const [selectedNumberingValue, setNumberingValue] = React.useState('');\n    const [propChanged, setPropChanged] = React.useState(false);\n    const [residueChecked, setResidueChecked] = React.useState(props.residueChecked);\n    const [mutationWeblogosChecked, setMutationWeblogosChecked] = React.useState(props.mutationWeblogosChecked);\n    const [mutationBarchartChecked, setmutationBarchartChecked] = React.useState(props.mutationBarchartChecked);\n    const [ptmChecked, setPtmChecked] = React.useState(props.ptmChecked);\n    const DragHandle = sortableHandle(() => <ReorderIcon />);\n    const numberingclass = classNames({\n  \"numberingdiv\":true,\n  \"hidden\": !(residueChecked || mutationWeblogosChecked || mutationBarchartChecked || ptmChecked)\n});\n\n    function toggleResidue(event) {\n      setResidueChecked(prev => !prev);\n      props.onChange(event);\n    };\n    function toggleMutationBarchart(event) {\n      setmutationBarchartChecked(prev => !prev);\n      props.onChange(event);\n    };\n    function toggleMutationWeblogos(event) {\n      setMutationWeblogosChecked(prev => !prev);\n      props.onChange(event);\n    };\n    function togglePtm(event) {\n      setPtmChecked(prev => !prev);\n      props.onChange(event);\n    };\n    //componentDidMount\n \n      useEffect( ()=>{\n        //alert(selectedNumbering);\n        //numberingChanged('init',props.numbers);\n        // setNumberingValue('AKT1');\n      }, [] );\n   \n\n    const numberingChanged = event => {\n      if (props.numbers && event.target)\n      {\n      const val = props.numbers.filter(function(item){return item.name == event.target.value});\n      let numbering = \"N/A\";\n      if (val)\n        numbering = val[0].value.map(n => n === null ? '- ' : <span className=\"v\">{n}</span>);\n      //showNumbers()\n      setNumbering({\"value\":numbering});\n      setPropChanged(true);\n      setNumberingValue(event.target.value);\n    }\n    };\n    \n    const classes = useStyles();\n\n    return(\n     //<div className={classes.root}>\n     <div>\n     <ExpansionPanel square defaultExpanded>\n       <ExpansionPanelSummary\n         //expandIcon={<ExpandMoreIcon />}\n         aria-controls=\"panel1d-content\" id=\"panel1d-header\">\n\n<StyledFormGroup row className={classes.formGroupRow}>\n<DragHandle />\n<DeleteIcon fontSize=\"small\" onClick={props.onRemove} style={{ cursor: \"pointer\" }} />\n<Button  size=\"small\" variant=\"outlined\" color=\"primary\" className={classes.button}>\n        {props.value.value}\n      </Button>\n      <NativeSelect\n                value={selectedNumberingValue}\n                onChange={numberingChanged}\n                onClick={e => { e.stopPropagation(); }}\n                inputProps={{\n                  name: 'numbering',\n                  id: 'numbering-native-label-placeholder',\n                }}\n              >\n                {/* {renderOptions(props.numbers)} */}\n                {props.numbers? props.numbers.map((item,i) => { return (<option key={i} value={item.name}>{item.name}</option>) }):\"\"}\n              \n\n              </NativeSelect>\n\n        <FormControlLabel\n          control={<Switch size=\"small\" id={`res-checkbox-${props.value.id}`} checked={residueChecked} value=\"residue\" onClick={e => { e.stopPropagation(); }} onChange={toggleResidue} />}\n          label=\"Residue\"\n        />\n        <FormControlLabel\n          control={<Switch size=\"small\" id={`mutw-checkbox-${props.value.id}`} checked={mutationWeblogosChecked} value=\"mutationw\" onClick={e => { e.stopPropagation(); }} onChange={toggleMutationWeblogos}   />}\n          label=\"Mutation (W)\"\n        />\n        <FormControlLabel\n          control={<Switch size=\"small\" id={`mutb-checkbox-${props.value.id}`} checked={mutationBarchartChecked} value=\"mutationb\" onClick={e => { e.stopPropagation(); }} onChange={toggleMutationBarchart}   />}\n          label=\"Mutation (B)\"\n        />\n        <FormControlLabel\n          control={ <Switch size=\"small\" id={`ptm-checkbox-${props.value.id}`} checked={ptmChecked} value=\"ptm\" onClick={e => { e.stopPropagation(); }} onChange={togglePtm}   /> }          label=\"PTM\"\n        />\n      </StyledFormGroup>\n         \n       </ExpansionPanelSummary>\n       <ExpansionPanelDetails className={classes.details}>\n         {/* <div className={classes.leftside}>\n              <FormControl className={classes.formControl}>\n              <InputLabel shrink htmlFor=\"numbering-native-label-placeholder\">\n                Alignments\n              </InputLabel>\n          \n            </FormControl>\n         </div> */}\n         <Box>\n          {/* <img id={`weblogo-${props.value.id}`} className={residueChecked ? classes.visible: classes.hidden} src={`sequences/${props.highres?\"highres\":\"png\"}/${props.value.path}.${props.highres?\"png\":\"png\"}`} height={props.height?props.height:\"188\"} width={props.width ? props.width:\"4857\"}  /> */}\n          <img id={`weblogo-${props.value.id}`} className={residueChecked ? classes.visible: classes.hidden} src={`sequences/png/${props.value.path}.png`} height={props.height?props.height:\"188\"} width={props.width ? props.width:\"4840\"}  />\n         </Box>\n         <Box className={mutationWeblogosChecked ? classes.visible: classes.hidden}>\n           <img id={`mutationw-${props.value.id}`}  src={`mutations/weblogos/png/${props.value.path}.png`} height={props.height?props.height:\"188\"} width={props.width ? props.width:\"4840\"}  />\n         </Box>\n         <Box className={mutationBarchartChecked ? classes.visible: classes.hidden}>\n           <img id={`mutationb-${props.value.id}`}  src={`mutations/barchart/png/${props.value.path}.png`} height={props.height?props.height:\"188\"} width={props.width ? props.width:\"4840\"}  />\n         </Box>\n         <Box className={ptmChecked ? classes.visible: classes.hidden}>\n           <img id={`ptm-${props.value.id}`}  src={`ptm/barchart/png/${props.value.path}.png`} height={props.height?props.height:\"188\"} width={props.width ? props.width:\"4840\"}  />\n         </Box>\n         <div className={numberingclass}>\n              {selectedNumbering?selectedNumbering.value.map((n,index) => n === null ? <span key={`p${index}`} className=\"v\">-</span> : <span key={`p${index}`} onClick={highlightColumn} className=\"v\">{n}</span>):\"\"}\n              </div>\n     \n         \n      \n       </ExpansionPanelDetails>\n       {/* <Divider />\n       <ExpansionPanelActions>\n         <Button size=\"small\">Cancel</Button>\n         <Button size=\"small\" color=\"primary\">\n           Save\n         </Button>\n       </ExpansionPanelActions> */}\n     </ExpansionPanel>\n   </div>\n    \n    );\n}\nfunction memoize()\n{\n    return false;\n}\nexport default KinWeblogo;\n//export default React.memo(KinWeblogo,memoize);","import React, { useRef, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TreeView from '@material-ui/lab/TreeView';\nimport TreeItem from '@material-ui/lab/TreeItem';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport tree from '../data/classification.json';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport { ArrowRight, ArrowDropDown, NoMeetingRoom } from '@material-ui/icons';\nimport { getNodeMajorVersion } from 'typescript';\n\n\nconst useTreeItemStyles = makeStyles(theme => ({\n  root: {\n    color: theme.palette.text.secondary,\n    '&:focus > $content': {\n      backgroundColor: `var(--tree-view-bg-color, ${theme.palette.grey[400]})`,\n      color: 'var(--tree-view-color)',\n    },\n  },\n  content: {\n    color: theme.palette.text.secondary,\n    borderTopRightRadius: theme.spacing(2),\n    borderBottomRightRadius: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n    fontWeight: theme.typography.fontWeightMedium,\n    '$expanded > &': {\n      fontWeight: theme.typography.fontWeightRegular,\n    },\n  },\n  group: {\n    marginLeft: 0,\n    '& $content': {\n      // paddingLeft: theme.spacing(2),\n    },\n  },\n  expanded: {},\n  label: {\n    fontWeight: 'inherit',\n    color: 'inherit',\n  },\n  labelRoot: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0.2, 0),\n    margin: -5\n  },\n  labelIcon: {\n    marginRight: theme.spacing(1),\n  },\n  labelText: {\n    fontWeight: 'inherit',\n    flexGrow: 1,\n  },\n}));\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    // height: 216,\n    flexGrow: 1,\n    maxWidth: 200,\n    position: 'relative',\n    marginLeft: -15\n  }\n\n}));\n\nfunction StyledTreeItem(props) {\n  const classes = useTreeItemStyles();\n  const { isDark, nodeType, labelText, labelIcon: LabelIcon, labelIconColor, labelInfo, color, bgColor, ...other } = props;\n\n  return (\n    <TreeItem\n      label={\n        <div className={classes.labelRoot}>\n          {\n            nodeType == 'protein' && isDark?\n            <img alt=\"Dark Kinase\" src=\"img/kinase_dark.svg\" width=\"20px\" />\n            :''\n          }\n          {\n            nodeType == 'protein' && !isDark?\n            // <WellknownIcon className={classes.labelIcon} />\n            <img alt=\"Well-known Kinase\" src=\"img/kinase_wellknown.svg\" width=\"20px\" />\n            :''\n          }\n          <Typography variant=\"body2\" className={classes.labelText}>\n            {labelText}\n          </Typography>\n          <Typography variant=\"caption\" color=\"inherit\">\n            {labelInfo}\n          </Typography>\n        </div>\n      }\n      style={{\n        '--tree-view-color': color,\n        '--tree-view-bg-color': bgColor,\n      }}\n      classes={{\n        root: classes.root,\n        content: classes.content,\n        expanded: classes.expanded,\n        group: classes.group,\n        label: classes.label,\n      }}\n      {...other}\n    />\n  );\n}\n\nStyledTreeItem.propTypes = {\n  bgColor: PropTypes.string,\n  color: PropTypes.string,\n  labelIcon: PropTypes.elementType,\n  labelInfo: PropTypes.string,\n  labelText: PropTypes.string.isRequired,\n};\n\n// const useStyles = makeStyles({\n//   root: {\n//     height: 264,\n//     flexGrow: 1,\n//     maxWidth: 400,\n//   },\n// });\n\nfunction KinTreeView(props) {\n  const originalNodes = tree.map((n)=>{n.checked=false;return n;}); \n  const nodesCopy = JSON.parse(JSON.stringify(originalNodes));\n  \n  const classes = useStyles();\n  \n  //const [nodes, setNodes] = React.useState(props.nodes);\n  const [nodes,setNodes] = React.useState(originalNodes);\n  const [darkKinase, setDarkKinase] = React.useState(props.darkKinase);\n  const filterInput = useRef(null);\n\n  // useEffect(() => {\n  //   setNodes(getNodes());\n  // }, [nodes]);\n\n  function handleNodeClick(e, node) {\n    props.onCheckBoxesChanged(node, e.target.checked);\n  }\n\n  function checkInSelectedNodes(node) {\n    return props.selectedNodes.filter(n => n.id == node.id).length > 0;\n  }\n\n  function handleFilterChange(e,val) {\n    console.log(\"val=\"+ val);\n    let filtered;\n    if (val) {\n      filtered = nodesCopy.filter(function iter(o) {\n        if (o.value.toLowerCase().includes(val.toLowerCase())) {\n          return true;\n        }\n        if (!Array.isArray(o.nodes)) {\n          return false;\n        }\n        let temp = o.nodes.filter(iter);\n        if (temp.length) {\n          o.nodes = temp;\n          filtered = temp;\n\n          return true;\n        }\n      });\n      setNodes([...filtered]);\n    }\n    else\n      setNodes(originalNodes);\n    //filterInput.current.focus();\n\n  }\n  function makeTree(nodes) {\n    const children = (members) => {\n      if (members) {\n        return makeTree(members);\n      }\n    }\n\nif (nodes)    return nodes.map((node, index) => {\n      return <div key={`node-${index}`} style={{ display: 'flex', alignItems: 'baseline' }}>\n        <Checkbox\n          id={`checkbox-${node.id}`}\n          size='small'\n          color=\"primary\"\n          checked={checkInSelectedNodes(node)}\n          onChange={(e) => handleNodeClick(e, node)}/>\n          <StyledTreeItem nodeId={node.id} labelText={node.value} isDark={node.isDark} nodeType={node.type} >\n            {children(node.nodes)}\n          </StyledTreeItem>\n      </div>\n    })\n  }\n\n  return (\n\n    <div>\n          <Autocomplete\n           size=\"small\"\n          //ref={filterInput}\n          id=\"input-with-icon-grid\" \n          options={darkKinase}\n          getOptionLabel={option => option.value}\n          onInputChange={handleFilterChange}\n          style={{ width: 150 }}\n          freeSolo\n          renderInput={params => (\n        <TextField {...params} label=\"Dark Kinase\" variant=\"outlined\" style = {{width: 150}}  />\n      )}\n    />\n\n      {/* <TextField autoFocus ref={filterInput}\n          id=\"input-with-icon-grid\" \n          label=\"Filter\" \n          onChange={handleFilterChange}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <Search />\n              </InputAdornment>\n            ),\n          }}\n      /> */}\n\n      <TreeView\n        className={classes.root}\n        defaultCollapseIcon={<ArrowDropDown />}\n        defaultExpandIcon={<ArrowRight />}\n      >\n        {\n          makeTree(nodes)\n          //   nodes.map(function(item, idx){\n          //   return (<TreeItem nodeId={item.id} label={item.value}/>)\n          // })}\n        }\n      </TreeView>\n    </div>\n  );\n}\nfunction memoize() {\n  //because we don't want to re-render the dendrogram\n  return true;\n}\n//const KinTreeView = React.memo(KinTreeViewFunc,memoize);\nexport default KinTreeView;","//https://aspenmesh.io/2019/03/using-d3-in-react-a-pattern-for-using-data-visualization-at-scale/\nimport React, { useRef, useEffect, useState } from 'react';\nimport './App.css';\n//import MuiTreeView from 'material-ui-treeview';\n\nimport darkKinase from './data/dark_list.json'\nimport numberingjson from './data/numbering.json';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { makeStyles } from '@material-ui/core/styles';\n//import * as d3 from \"d3\";\nimport KinWeblogo from './components/KinWeblogo'\nimport KinTreeView from './components/KinTreeView'\nimport Switch from '@material-ui/core/Switch';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Slider from '@material-ui/core/Slider';\n// const rowWidth = 30, rowHeight = 120;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    // flexGrow: 1,\n    marginLeft: 30,\n  },\n  paper: {\n    padding: theme.spacing(0),\n  },\n  leftBox:\n  {\n    position: 'relative',\n    // zIndex:'top'\n  },\n  mainBoxVisible:\n  {\n    //marginLeft: 200,\n    display: 'inline-block'\n  },\n  mainBoxInvisible:\n  {\n    // marginLeft: 215,\n    display: 'none'\n  },\n  treeVisible:\n  {\n    display: 'inline-block',\n    marginRight: 40\n  },\n  treeInvisible:\n  {\n    //marginLeft: 0,\n    display: 'none'\n  },\n  nowrap:\n  {\n    flexWrap: \"nowrap !important\",\n  },\n\n  paper: {\n    // backgroundColor: theme.palette.background.paper,\n    // border: '0px solid #000',\n    // boxShadow: \"none\",//theme.shadows[5],\n    // padding: theme.spacing(3, 10, 1),\n    // minWidth: 400,\n    // overflow: 'auto'\n  },\n  hidden:\n  {\n    display: \"none\"\n  },\n  structure:\n  {\n    marginLeft: 55,\n    width: 4863\n  }\n}));\n// console.log(tree);\n// const imgLogoStyle = {\n//   width: '100px'\n// };\nconst imgUgaLogoStyle = {\n  float: 'right',\n  width: '120px',\n  marginTop: '-40px'\n};\n\n// const treeStyles = {\n//   control: styles => ({ ...styles, color: 'red' }),\n//   text: (styles, { text, childPanel }) => {\n//     //const color = chroma(data.color);\n//     return {\n//       ...styles,\n//       backgroundColor: 'blue',\n//       color: 'green',\n//     };\n//   },\n// };\n\n\nfunction App() {\n  const [rdbvalue, setRdbValue] = React.useState('rdbResidue');\n  // const [firstLabel, setFirstLabel] = React.useState('');\n  // const [secondLabel, setSecondLabel] = React.useState('');\n  \n  const [selectedNode, setSelectedNode] = React.useState('');\n  const [selectedNodes, setSelectedNodes] = React.useState([]);\n  const [switchShowTreeChecked, setSwitchShowTreeChecked] = React.useState(true);\n  const [switchDomainChecked, setSwitchDomainChecked] = React.useState(false);\n  const [switchHighResChecked, setHighResChecked] = React.useState(false);\n  const [openResetDialog, setOpenResetDialog] = React.useState(false);\n\n  const [open, setOpen] = React.useState(false);\n  const [items, setItems] = useState([]);\n  const [height, setHeight] = React.useState(\"100\");\n  const weblogoRemove= node => e =>\n  {\n    handleDelete(node);\n  }\n  const weblogoCheckboxChanged = e =>\n  {\n    //let node = selectedNodes.filter(k => k.id == val.id);\n    const modifiedNodes = selectedNodes.map((item,j)=>\n    {\n      if (e.target.id == \"res-checkbox-\" + item.id )\n        item.residueChecked = e.target.checked;\n      if (e.target.id == \"mutw-checkbox-\" + item.id )\n        item.mutationWeblogosChecked = e.target.checked;\n      if (e.target.id == \"mutb-checkbox-\" + item.id )\n        item.mutationBarchartChecked = e.target.checked;\n      if (e.target.id == \"ptm-checkbox-\" + item.id )\n        item.ptmChecked = e.target.checked;\n      \n      return item;\n    });\n    \n    setSelectedNodes(modifiedNodes);\n  }\n  const SortableItem = SortableElement((item) =>\n    <div>\n      <KinWeblogo \n          value={item.value}\n          highres={switchHighResChecked} \n          numbers={getCandidateNumbers(item.value)} \n          height={height} \n          onRemove={weblogoRemove(item.value)}\n          onChange={weblogoCheckboxChanged}\n          residueChecked={item.value.residueChecked} \n          mutationWeblogosChecked={item.value.mutationWeblogosChecked}\n          mutationBarchartChecked={item.value.mutationBarchartChecked}\n          ptmChecked={item.value.ptmChecked} />\n    </div>\n  );\n  const SortableList = SortableContainer(({ items }) => {\n    return (\n      <ul>\n        {selectedNodes.map((item, index) => (\n          <SortableItem key={`item-${item.id}`} index={index} value={item} />\n          //     <KinWeblogo src={'weblogos/' + item.path} label={item.value} numbers={getCandidateNumbers(item)}/>\n        ))}\n      </ul>\n    );\n  });\n  const onSortEnd = ({ oldIndex, newIndex }) => {\n\n    setSelectedNodes(arrayMove(selectedNodes, oldIndex, newIndex));\n  };\n\n  // useEffect(() => {\n  //   alert('han');\n  // }, [selectedNodes]);\n\n\n  function treeCheckboxChanged(node, checked) {\n    console.log(\"id=\" + node.id);\n    console.log(\"checked=\" + checked);\n    console.log(\"treeCheckboxChanged:\" + selectedNodes.length);\n\n    if (checked) { //add the selection to selectedNodes\n      setSelectedNode(node);\n      node.residueChecked = true;\n      node.ptmChecked = false;\n      node.mutationWeblogosChecked=false;\n      node.mutationBarchart=false;\n      setSelectedNodes(selectedNodes => [...selectedNodes, node]);\n    }\n    else //remvoe the Selection\n    {\n      //setSelectedNode('');\n      handleDelete(node);\n    }\n\n  }\n  // function nodeSelected(node)\n  // {\n\n  //   // if (rdbvalue === 'rdbfirst')\n  //   //   setFirstLabel(node.value);\n  //   // else if (rdbvalue === 'rdbsecond')\n  //   //   setSecondLabel(node.value);\n\n  // }\n  function getCandidateNumbers(node) {\n    let numbering = { numberingjson }\n    //todo: members[0] should be a dropdown box\n    if (!node || !node.members || node.members.length == 0 || !(node.members[0] in numbering.numberingjson))\n      return null;\n\n    let candidates = []\n    node.members.forEach(function (n) {\n      if (numbering.numberingjson.hasOwnProperty(n))\n        candidates.push({ \"name\": n, \"value\": numbering.numberingjson[n] });\n    });\n\n    return candidates;\n    //return numbering.numberingjson[node.members[0]];\n  }\n\n  function handleDelete(nodeToDelete) {\n    var filtered = selectedNodes.filter(function (value, index, arr) {\n      return value.id != nodeToDelete.id;\n    });\n    setSelectedNodes(filtered);\n  }\n  const handleTreeSwitchChange = () => {\n    setSwitchShowTreeChecked(prev => !prev);\n  };\n  const handleHighResChange = () => {\n    setHighResChecked(prev => !prev);\n  };\n  \n  const handleDomainSwitchChange = () => {\n    setSwitchDomainChecked(prev => !prev);\n  };\n  const handleResetClick = () => {\n    setOpenResetDialog(true);\n  }\n\n\n\n  //   function renderWeblogos()\n  // {\n  //   if (selectedNodes.length == 0)\n  //     return \"N/A\";\n  //   return selectedNodes.map((item,i) => { return (\n  //     <KinWeblogo src={'weblogos/' + item.path} label={item.value} numbers={getCandidateNumbers(item)}/>\n  //   ) });\n  // }\n  // function getImage(lbl)\n  // {\n  //   console.log(lbl)\n  //   let src = '';\n  //   if (lbl !== '')\n  //     src = 'weblogos/PK_' + lbl + '.png';\n\n  //   return src;\n  // }\n\n  // function drawd()\n  // {\n  //   var img = document.getElementById(\"firstImage\");\n  //   if (img!==null && img.src!=='')\n  //   {  \n\n  //     var cnvs = document.getElementById(\"firstCanvas\");\n  //    console.log(cnvs);\n  //     cnvs.style.position = \"absolute\";\n  //     cnvs.style.left = img.offsetLeft + \"px\";\n  //     cnvs.style.top = img.offsetTop + \"px\";\n\n  //     var ctx = cnvs.getContext(\"2d\");\n  //     ctx.beginPath();\n  //     ctx.arc(250, 210, 200, 0, 2 * Math.PI, false);\n  //     ctx.lineWidth = 3;\n  //     ctx.strokeStyle = '#00ff00';\n  //     ctx.stroke();\n  //   }\n  // }\n\n  const handleCloseYes = () => {\n    setOpenResetDialog(false);\n    setSelectedNodes([]);\n  };\n\n  const handleCloseNo = () => {\n    setOpenResetDialog(false);\n  };\n  const heightChanged = (event,value) => {\n    setHeight(value);\n  };\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid item>\n        <FormControlLabel label=\"Hierarchy\" control={<Switch checked={switchShowTreeChecked} onChange={handleTreeSwitchChange} />} />\n        {/* <FormControlLabel label=\"High-Res\" control={<Switch checked={switchHighResChecked} onChange={handleHighResChange} />} />         */}\n        <FormControlLabel label=\"Domain Structure\" control={<Switch checked={switchDomainChecked} onChange={handleDomainSwitchChange} />} />\n        <FormControlLabel control={<Button variant=\"outlined\" color=\"secondary\" onClick={handleResetClick}>Reset</Button>} />\n        <FormControlLabel label=\"Height\" labelPlacement=\"start\" control={\n        <div style={{width:100}}>\n            <Slider\n            onChange={heightChanged}\n            defaultValue={height}\n            aria-labelledby=\"discrete-slider\"\n            valueLabelDisplay=\"auto\"\n            step={5}\n            min={50}\n            max={150}\n          />\n       </div>\n        } />\n        \n\n        <Dialog\n          open={openResetDialog}\n          onClose={handleCloseNo}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Confirmation\"}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              Do you want to remove all of the selections?\n          </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleCloseYes} color=\"primary\">\n              Yes\n          </Button>\n            <Button onClick={handleCloseNo} color=\"primary\" autoFocus>\n              No\n          </Button>\n          </DialogActions>\n        </Dialog>\n\n\n        {/* <SelectionBox items={selectedNodes} onDelete={handleDelete} /> */}\n      </Grid>\n\n\n      <Grid item xs={12}>\n        <Grid container justify=\"flex-start\" spacing={1} className={classes.nowrap}>\n          <Grid key=\"leftTree\" className={switchShowTreeChecked ? classes.treeVisible : classes.treeInvisible} item>\n            <KinTreeView darkKinase={darkKinase} selectedNodes={selectedNodes} onCheckBoxesChanged={treeCheckboxChanged} />\n          </Grid>\n          <Grid key=\"rightContents\" item>\n            <div className={selectedNodes.length > 0 ? classes.mainBoxVisible : classes.mainBoxInvisible}>\n\n              <img src={'img/KinView_Structure.png'} className={selectedNode && switchDomainChecked ? classes.structure : classes.hidden} />\n              <Paper id=\"mainPaper\" className={selectedNode ? classes.paper : classes.hidden} elevation={0}>\n                {\n                  <SortableList items={selectedNodes} onSortEnd={onSortEnd} useDragHandle />\n                  // selectedNodes.map(function (item, idx) {\n                  //   return //(<KinWeblogo src={'weblogos/' + item.path} height=\"140\"  label={item.value} numbers={getCandidateNumbers(item)} />)\n                  // })\n                }\n\n              </Paper>\n            </div>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}